// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Preview Picker renders custom chip avatars 1`] = `
<MultiPicker
  itemToLabel={
    [MockFunction] {
      "calls": Array [
        Array [
          "some-item",
        ],
      ],
      "results": undefined,
    }
  }
  itemToString={[Function]}
  onChange={[Function]}
  value={
    Array [
      "some-item",
    ]
  }
>
  <Downshift
    defaultHighlightedIndex={null}
    defaultIsOpen={false}
    environment={[Window]}
    fullWidth={true}
    getA11yStatusMessage={[Function]}
    inputValue=""
    itemToString={[Function]}
    onChange={[Function]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <div
      aria-expanded={false}
      aria-haspopup="listbox"
      aria-labelledby="downshift-3-label"
      aria-owns={null}
      role="combobox"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <WithStyles(PickerInput)
        aria-activedescendant={null}
        aria-autocomplete="list"
        aria-controls={null}
        aria-labelledby="downshift-3-label"
        autoComplete="off"
        id="downshift-3-input"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        startAdornment={
          Array [
            <WithStyles(PickerChip)
              item="some-item"
              label={
                <WithStyles(Avatar)
                  src="./missing-image"
                />
              }
              onDelete={[Function]}
            />,
          ]
        }
        value=""
      >
        <PickerInput
          aria-activedescendant={null}
          aria-autocomplete="list"
          aria-controls={null}
          aria-labelledby="downshift-3-label"
          autoComplete="off"
          classes={
            Object {
              "InputRoot": "PickerInput-InputRoot-1",
              "inputRoot": "PickerInput-inputRoot-2",
            }
          }
          fullWidth={false}
          id="downshift-3-input"
          label=""
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          startAdornment={
            Array [
              <WithStyles(PickerChip)
                item="some-item"
                label={
                  <WithStyles(Avatar)
                    src="./missing-image"
                  />
                }
                onDelete={[Function]}
              />,
            ]
          }
          value=""
        >
          <TextField
            InputLabelProps={
              Object {
                "shrink": true,
              }
            }
            InputProps={
              Object {
                "classes": Object {
                  "root": "PickerInput-InputRoot-1",
                },
                "inputProps": Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": null,
                  "aria-labelledby": "downshift-3-label",
                  "autoComplete": "off",
                  "id": "downshift-3-input",
                  "onBlur": [Function],
                  "onKeyDown": [Function],
                  "style": Object {
                    "flex": "1 1 auto",
                    "minWidth": "200px",
                    "width": "auto",
                  },
                },
                "startAdornment": Array [
                  <WithStyles(PickerChip)
                    item="some-item"
                    label={
                      <WithStyles(Avatar)
                        src="./missing-image"
                      />
                    }
                    onDelete={[Function]}
                  />,
                ],
              }
            }
            fullWidth={false}
            label=""
            onChange={[Function]}
            required={false}
            select={false}
            value=""
            variant="standard"
          >
            <WithStyles(FormControl)
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <FormControl
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth-6",
                    "marginDense": "MuiFormControl-marginDense-5",
                    "marginNormal": "MuiFormControl-marginNormal-4",
                    "root": "MuiFormControl-root-3",
                  }
                }
                component="div"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="none"
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root-3"
                >
                  <WithStyles(Input)
                    classes={
                      Object {
                        "root": "PickerInput-InputRoot-1",
                      }
                    }
                    fullWidth={false}
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": null,
                        "aria-labelledby": "downshift-3-label",
                        "autoComplete": "off",
                        "id": "downshift-3-input",
                        "onBlur": [Function],
                        "onKeyDown": [Function],
                        "style": Object {
                          "flex": "1 1 auto",
                          "minWidth": "200px",
                          "width": "auto",
                        },
                      }
                    }
                    onChange={[Function]}
                    startAdornment={
                      Array [
                        <WithStyles(PickerChip)
                          item="some-item"
                          label={
                            <WithStyles(Avatar)
                              src="./missing-image"
                            />
                          }
                          onDelete={[Function]}
                        />,
                      ]
                    }
                    value=""
                  >
                    <Input
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-10",
                          "error": "MuiInput-error-12",
                          "focused": "MuiInput-focused-9",
                          "formControl": "MuiInput-formControl-8",
                          "fullWidth": "MuiInput-fullWidth-14",
                          "input": "MuiInput-input-15",
                          "inputMarginDense": "MuiInput-inputMarginDense-16",
                          "inputMultiline": "MuiInput-inputMultiline-17",
                          "inputType": "MuiInput-inputType-18",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                          "multiline": "MuiInput-multiline-13",
                          "root": "MuiInput-root-7 PickerInput-InputRoot-1",
                          "underline": "MuiInput-underline-11",
                        }
                      }
                      fullWidth={false}
                      inputProps={
                        Object {
                          "aria-activedescendant": null,
                          "aria-autocomplete": "list",
                          "aria-controls": null,
                          "aria-labelledby": "downshift-3-label",
                          "autoComplete": "off",
                          "id": "downshift-3-input",
                          "onBlur": [Function],
                          "onKeyDown": [Function],
                          "style": Object {
                            "flex": "1 1 auto",
                            "minWidth": "200px",
                            "width": "auto",
                          },
                        }
                      }
                      onChange={[Function]}
                      startAdornment={
                        Array [
                          <WithStyles(PickerChip)
                            item="some-item"
                            label={
                              <WithStyles(Avatar)
                                src="./missing-image"
                              />
                            }
                            onDelete={[Function]}
                          />,
                        ]
                      }
                      value=""
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-10",
                            "error": "MuiInput-error-12",
                            "focused": "MuiInput-focused-9",
                            "formControl": "MuiInput-formControl-8",
                            "fullWidth": "MuiInput-fullWidth-14",
                            "input": "MuiInput-input-15",
                            "inputMarginDense": "MuiInput-inputMarginDense-16",
                            "inputMultiline": "MuiInput-inputMultiline-17",
                            "inputType": "MuiInput-inputType-18",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                            "multiline": "MuiInput-multiline-13",
                            "root": "MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": null,
                            "aria-labelledby": "downshift-3-label",
                            "autoComplete": "off",
                            "id": "downshift-3-input",
                            "onBlur": [Function],
                            "onKeyDown": [Function],
                            "style": Object {
                              "flex": "1 1 auto",
                              "minWidth": "200px",
                              "width": "auto",
                            },
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        startAdornment={
                          Array [
                            <WithStyles(PickerChip)
                              item="some-item"
                              label={
                                <WithStyles(Avatar)
                                  src="./missing-image"
                                />
                              }
                              onDelete={[Function]}
                            />,
                          ]
                        }
                        type="text"
                        value=""
                      >
                        <WithFormControlContext(InputBase)
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-25",
                              "adornedStart": "MuiInputBase-adornedStart-24",
                              "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                              "error": "MuiInputBase-error-26 MuiInput-error-12",
                              "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                              "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                              "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                              "input": "MuiInputBase-input-30 MuiInput-input-15",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                              "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                              "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                              "marginDense": "MuiInputBase-marginDense-27",
                              "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                              "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            }
                          }
                          fullWidth={false}
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": null,
                              "aria-labelledby": "downshift-3-label",
                              "autoComplete": "off",
                              "id": "downshift-3-input",
                              "onBlur": [Function],
                              "onKeyDown": [Function],
                              "style": Object {
                                "flex": "1 1 auto",
                                "minWidth": "200px",
                                "width": "auto",
                              },
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          startAdornment={
                            Array [
                              <WithStyles(PickerChip)
                                item="some-item"
                                label={
                                  <WithStyles(Avatar)
                                    src="./missing-image"
                                  />
                                }
                                onDelete={[Function]}
                              />,
                            ]
                          }
                          type="text"
                          value=""
                        >
                          <InputBase
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-25",
                                "adornedStart": "MuiInputBase-adornedStart-24",
                                "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                                "error": "MuiInputBase-error-26 MuiInput-error-12",
                                "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                                "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                                "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                                "input": "MuiInputBase-input-30 MuiInput-input-15",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                                "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                                "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                                "marginDense": "MuiInputBase-marginDense-27",
                                "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                                "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "aria-labelledby": "downshift-3-label",
                                "autoComplete": "off",
                                "id": "downshift-3-input",
                                "onBlur": [Function],
                                "onKeyDown": [Function],
                                "style": Object {
                                  "flex": "1 1 auto",
                                  "minWidth": "200px",
                                  "width": "auto",
                                },
                              }
                            }
                            muiFormControl={
                              Object {
                                "adornedStart": true,
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "margin": "none",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": false,
                                "variant": "standard",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            startAdornment={
                              Array [
                                <WithStyles(PickerChip)
                                  item="some-item"
                                  label={
                                    <WithStyles(Avatar)
                                      src="./missing-image"
                                    />
                                  }
                                  onDelete={[Function]}
                                />,
                              ]
                            }
                            type="text"
                            value=""
                          >
                            <div
                              className="MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11 MuiInputBase-formControl-21 MuiInput-formControl-8 MuiInputBase-adornedStart-24"
                              onClick={[Function]}
                            >
                              <WithStyles(PickerChip)
                                item="some-item"
                                key="some-item"
                                label={
                                  <WithStyles(Avatar)
                                    src="./missing-image"
                                  />
                                }
                                onDelete={[Function]}
                              >
                                <PickerChip
                                  classes={
                                    Object {
                                      "root": "PickerChip-root-37",
                                    }
                                  }
                                  item="some-item"
                                  label={
                                    <WithStyles(Avatar)
                                      src="./missing-image"
                                    />
                                  }
                                  onDelete={[Function]}
                                >
                                  <WithStyles(Tooltip)
                                    title="Click to show preview"
                                  >
                                    <Tooltip
                                      TransitionComponent={[Function]}
                                      classes={
                                        Object {
                                          "popper": "MuiTooltip-popper-38",
                                          "popperInteractive": "MuiTooltip-popperInteractive-39",
                                          "tooltip": "MuiTooltip-tooltip-40",
                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom-45",
                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft-42",
                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight-43",
                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop-44",
                                          "touch": "MuiTooltip-touch-41",
                                        }
                                      }
                                      disableFocusListener={false}
                                      disableHoverListener={false}
                                      disableTouchListener={false}
                                      enterDelay={0}
                                      enterTouchDelay={1000}
                                      interactive={false}
                                      leaveDelay={0}
                                      leaveTouchDelay={1500}
                                      placement="bottom"
                                      theme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "hover": "rgba(0, 0, 0, 0.08)",
                                              "hoverOpacity": 0.08,
                                              "selected": "rgba(0, 0, 0, 0.14)",
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                            "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                            "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": Object {
                                            "unit": 8,
                                          },
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.46429em",
                                            },
                                            "body1Next": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "lineHeight": "1.71429em",
                                            },
                                            "body2Next": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.5,
                                            },
                                            "button": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "textTransform": "uppercase",
                                            },
                                            "buttonNext": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.375em",
                                            },
                                            "captionNext": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "display1": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.20588em",
                                            },
                                            "display2": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.8125rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.13333em",
                                              "marginLeft": "-.02em",
                                            },
                                            "display3": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "-.02em",
                                              "lineHeight": "1.30357em",
                                              "marginLeft": "-.02em",
                                            },
                                            "display4": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "7rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-.04em",
                                              "lineHeight": "1.14286em",
                                              "marginLeft": "-.04em",
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1,
                                            },
                                            "h2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1,
                                            },
                                            "h3": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.04,
                                            },
                                            "h4": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.17,
                                            },
                                            "h5": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.33,
                                            },
                                            "h6": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "headline": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.35417em",
                                            },
                                            "overline": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subheading": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.5em",
                                            },
                                            "subtitle1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                            "title": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.3125rem",
                                              "fontWeight": 500,
                                              "lineHeight": "1.16667em",
                                            },
                                            "useNextVariants": false,
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      title="Click to show preview"
                                    >
                                      <RootRef
                                        rootRef={[Function]}
                                      >
                                        <WithStyles(Chip)
                                          aria-describedby={null}
                                          className="PickerChip-root-37"
                                          label={
                                            <WithStyles(Avatar)
                                              src="./missing-image"
                                            />
                                          }
                                          onBlur={[Function]}
                                          onDelete={[Function]}
                                          onFocus={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={-1}
                                          title="Click to show preview"
                                        >
                                          <Chip
                                            aria-describedby={null}
                                            className="PickerChip-root-37"
                                            classes={
                                              Object {
                                                "avatar": "MuiChip-avatar-58",
                                                "avatarChildren": "MuiChip-avatarChildren-61",
                                                "avatarColorPrimary": "MuiChip-avatarColorPrimary-59",
                                                "avatarColorSecondary": "MuiChip-avatarColorSecondary-60",
                                                "clickable": "MuiChip-clickable-49",
                                                "clickableColorPrimary": "MuiChip-clickableColorPrimary-50",
                                                "clickableColorSecondary": "MuiChip-clickableColorSecondary-51",
                                                "colorPrimary": "MuiChip-colorPrimary-47",
                                                "colorSecondary": "MuiChip-colorSecondary-48",
                                                "deletable": "MuiChip-deletable-52",
                                                "deletableColorPrimary": "MuiChip-deletableColorPrimary-53",
                                                "deletableColorSecondary": "MuiChip-deletableColorSecondary-54",
                                                "deleteIcon": "MuiChip-deleteIcon-66",
                                                "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary-67",
                                                "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary-68",
                                                "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary-69",
                                                "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary-70",
                                                "icon": "MuiChip-icon-62",
                                                "iconColorPrimary": "MuiChip-iconColorPrimary-63",
                                                "iconColorSecondary": "MuiChip-iconColorSecondary-64",
                                                "label": "MuiChip-label-65",
                                                "outlined": "MuiChip-outlined-55",
                                                "outlinedPrimary": "MuiChip-outlinedPrimary-56",
                                                "outlinedSecondary": "MuiChip-outlinedSecondary-57",
                                                "root": "MuiChip-root-46",
                                              }
                                            }
                                            color="default"
                                            component="div"
                                            label={
                                              <WithStyles(Avatar)
                                                src="./missing-image"
                                              />
                                            }
                                            onBlur={[Function]}
                                            onDelete={[Function]}
                                            onFocus={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Click to show preview"
                                            variant="default"
                                          >
                                            <div
                                              aria-describedby={null}
                                              className="MuiChip-root-46 MuiChip-deletable-52 PickerChip-root-37"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseOver={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={-1}
                                              title="Click to show preview"
                                            >
                                              <span
                                                className="MuiChip-label-65"
                                              >
                                                <WithStyles(Avatar)
                                                  src="./missing-image"
                                                >
                                                  <Avatar
                                                    classes={
                                                      Object {
                                                        "colorDefault": "MuiAvatar-colorDefault-81",
                                                        "img": "MuiAvatar-img-82",
                                                        "root": "MuiAvatar-root-80",
                                                      }
                                                    }
                                                    component="div"
                                                    src="./missing-image"
                                                  >
                                                    <div
                                                      className="MuiAvatar-root-80"
                                                    >
                                                      <img
                                                        className="MuiAvatar-img-82"
                                                        src="./missing-image"
                                                      />
                                                    </div>
                                                  </Avatar>
                                                </WithStyles(Avatar)>
                                              </span>
                                              <pure(Cancel)
                                                className="MuiChip-deleteIcon-66"
                                                onClick={[Function]}
                                              >
                                                <Cancel
                                                  className="MuiChip-deleteIcon-66"
                                                  onClick={[Function]}
                                                >
                                                  <WithStyles(SvgIcon)
                                                    className="MuiChip-deleteIcon-66"
                                                    onClick={[Function]}
                                                  >
                                                    <SvgIcon
                                                      className="MuiChip-deleteIcon-66"
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction-74",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled-76",
                                                          "colorError": "MuiSvgIcon-colorError-75",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary-72",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary-73",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-77",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-79",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-78",
                                                          "root": "MuiSvgIcon-root-71",
                                                        }
                                                      }
                                                      color="inherit"
                                                      component="svg"
                                                      fontSize="default"
                                                      onClick={[Function]}
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="MuiSvgIcon-root-71 MuiChip-deleteIcon-66"
                                                        focusable="false"
                                                        onClick={[Function]}
                                                        role="presentation"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                        />
                                                      </svg>
                                                    </SvgIcon>
                                                  </WithStyles(SvgIcon)>
                                                </Cancel>
                                              </pure(Cancel)>
                                            </div>
                                          </Chip>
                                        </WithStyles(Chip)>
                                      </RootRef>
                                      <Popper
                                        className="MuiTooltip-popper-38"
                                        disablePortal={false}
                                        id={null}
                                        open={false}
                                        placement="bottom"
                                        transition={true}
                                      />
                                    </Tooltip>
                                  </WithStyles(Tooltip)>
                                </PickerChip>
                              </WithStyles(PickerChip)>
                              <input
                                aria-activedescendant={null}
                                aria-autocomplete="list"
                                aria-controls={null}
                                aria-invalid={false}
                                aria-labelledby="downshift-3-label"
                                autoComplete="off"
                                className="MuiInputBase-input-30 MuiInput-input-15 MuiInputBase-inputAdornedStart-35"
                                disabled={false}
                                id="downshift-3-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                required={false}
                                style={
                                  Object {
                                    "flex": "1 1 auto",
                                    "minWidth": "200px",
                                    "width": "auto",
                                  }
                                }
                                type="text"
                                value=""
                              />
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </div>
              </FormControl>
            </WithStyles(FormControl)>
          </TextField>
        </PickerInput>
      </WithStyles(PickerInput)>
      <PickerDropdown
        clearItems={[Function]}
        clearSelection={[Function]}
        closeMenu={[Function]}
        getItemProps={[Function]}
        getLabelProps={[Function]}
        getMenuProps={[Function]}
        getRootProps={[Function]}
        getToggleButtonProps={[Function]}
        highlightedIndex={null}
        id="downshift-3"
        inputValue=""
        isOpen={false}
        itemToString={[Function]}
        openMenu={[Function]}
        reset={[Function]}
        selectHighlightedItem={[Function]}
        selectItem={[Function]}
        selectItemAtIndex={[Function]}
        selectedItem={null}
        selectedItems={
          Array [
            "some-item",
          ]
        }
        setHighlightedIndex={[Function]}
        setItemCount={[Function]}
        setState={[Function]}
        toggleMenu={[Function]}
        unsetItemCount={[Function]}
      />
    </div>
  </Downshift>
</MultiPicker>
`;

exports[`Preview Picker renders custom chip labels 1`] = `
<MultiPicker
  itemToLabel={
    [MockFunction] {
      "calls": Array [
        Array [
          "some-item",
        ],
      ],
      "results": undefined,
    }
  }
  itemToString={[Function]}
  onChange={[Function]}
  value={
    Array [
      "some-item",
    ]
  }
>
  <Downshift
    defaultHighlightedIndex={null}
    defaultIsOpen={false}
    environment={[Window]}
    fullWidth={true}
    getA11yStatusMessage={[Function]}
    inputValue=""
    itemToString={[Function]}
    onChange={[Function]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <div
      aria-expanded={false}
      aria-haspopup="listbox"
      aria-labelledby="downshift-2-label"
      aria-owns={null}
      role="combobox"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <WithStyles(PickerInput)
        aria-activedescendant={null}
        aria-autocomplete="list"
        aria-controls={null}
        aria-labelledby="downshift-2-label"
        autoComplete="off"
        id="downshift-2-input"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        startAdornment={
          Array [
            <WithStyles(PickerChip)
              item="some-item"
              label="some label"
              onDelete={[Function]}
            />,
          ]
        }
        value=""
      >
        <PickerInput
          aria-activedescendant={null}
          aria-autocomplete="list"
          aria-controls={null}
          aria-labelledby="downshift-2-label"
          autoComplete="off"
          classes={
            Object {
              "InputRoot": "PickerInput-InputRoot-1",
              "inputRoot": "PickerInput-inputRoot-2",
            }
          }
          fullWidth={false}
          id="downshift-2-input"
          label=""
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          startAdornment={
            Array [
              <WithStyles(PickerChip)
                item="some-item"
                label="some label"
                onDelete={[Function]}
              />,
            ]
          }
          value=""
        >
          <TextField
            InputLabelProps={
              Object {
                "shrink": true,
              }
            }
            InputProps={
              Object {
                "classes": Object {
                  "root": "PickerInput-InputRoot-1",
                },
                "inputProps": Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": null,
                  "aria-labelledby": "downshift-2-label",
                  "autoComplete": "off",
                  "id": "downshift-2-input",
                  "onBlur": [Function],
                  "onKeyDown": [Function],
                  "style": Object {
                    "flex": "1 1 auto",
                    "minWidth": "200px",
                    "width": "auto",
                  },
                },
                "startAdornment": Array [
                  <WithStyles(PickerChip)
                    item="some-item"
                    label="some label"
                    onDelete={[Function]}
                  />,
                ],
              }
            }
            fullWidth={false}
            label=""
            onChange={[Function]}
            required={false}
            select={false}
            value=""
            variant="standard"
          >
            <WithStyles(FormControl)
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <FormControl
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth-6",
                    "marginDense": "MuiFormControl-marginDense-5",
                    "marginNormal": "MuiFormControl-marginNormal-4",
                    "root": "MuiFormControl-root-3",
                  }
                }
                component="div"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="none"
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root-3"
                >
                  <WithStyles(Input)
                    classes={
                      Object {
                        "root": "PickerInput-InputRoot-1",
                      }
                    }
                    fullWidth={false}
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": null,
                        "aria-labelledby": "downshift-2-label",
                        "autoComplete": "off",
                        "id": "downshift-2-input",
                        "onBlur": [Function],
                        "onKeyDown": [Function],
                        "style": Object {
                          "flex": "1 1 auto",
                          "minWidth": "200px",
                          "width": "auto",
                        },
                      }
                    }
                    onChange={[Function]}
                    startAdornment={
                      Array [
                        <WithStyles(PickerChip)
                          item="some-item"
                          label="some label"
                          onDelete={[Function]}
                        />,
                      ]
                    }
                    value=""
                  >
                    <Input
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-10",
                          "error": "MuiInput-error-12",
                          "focused": "MuiInput-focused-9",
                          "formControl": "MuiInput-formControl-8",
                          "fullWidth": "MuiInput-fullWidth-14",
                          "input": "MuiInput-input-15",
                          "inputMarginDense": "MuiInput-inputMarginDense-16",
                          "inputMultiline": "MuiInput-inputMultiline-17",
                          "inputType": "MuiInput-inputType-18",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                          "multiline": "MuiInput-multiline-13",
                          "root": "MuiInput-root-7 PickerInput-InputRoot-1",
                          "underline": "MuiInput-underline-11",
                        }
                      }
                      fullWidth={false}
                      inputProps={
                        Object {
                          "aria-activedescendant": null,
                          "aria-autocomplete": "list",
                          "aria-controls": null,
                          "aria-labelledby": "downshift-2-label",
                          "autoComplete": "off",
                          "id": "downshift-2-input",
                          "onBlur": [Function],
                          "onKeyDown": [Function],
                          "style": Object {
                            "flex": "1 1 auto",
                            "minWidth": "200px",
                            "width": "auto",
                          },
                        }
                      }
                      onChange={[Function]}
                      startAdornment={
                        Array [
                          <WithStyles(PickerChip)
                            item="some-item"
                            label="some label"
                            onDelete={[Function]}
                          />,
                        ]
                      }
                      value=""
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-10",
                            "error": "MuiInput-error-12",
                            "focused": "MuiInput-focused-9",
                            "formControl": "MuiInput-formControl-8",
                            "fullWidth": "MuiInput-fullWidth-14",
                            "input": "MuiInput-input-15",
                            "inputMarginDense": "MuiInput-inputMarginDense-16",
                            "inputMultiline": "MuiInput-inputMultiline-17",
                            "inputType": "MuiInput-inputType-18",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                            "multiline": "MuiInput-multiline-13",
                            "root": "MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": null,
                            "aria-labelledby": "downshift-2-label",
                            "autoComplete": "off",
                            "id": "downshift-2-input",
                            "onBlur": [Function],
                            "onKeyDown": [Function],
                            "style": Object {
                              "flex": "1 1 auto",
                              "minWidth": "200px",
                              "width": "auto",
                            },
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        startAdornment={
                          Array [
                            <WithStyles(PickerChip)
                              item="some-item"
                              label="some label"
                              onDelete={[Function]}
                            />,
                          ]
                        }
                        type="text"
                        value=""
                      >
                        <WithFormControlContext(InputBase)
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-25",
                              "adornedStart": "MuiInputBase-adornedStart-24",
                              "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                              "error": "MuiInputBase-error-26 MuiInput-error-12",
                              "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                              "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                              "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                              "input": "MuiInputBase-input-30 MuiInput-input-15",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                              "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                              "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                              "marginDense": "MuiInputBase-marginDense-27",
                              "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                              "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            }
                          }
                          fullWidth={false}
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": null,
                              "aria-labelledby": "downshift-2-label",
                              "autoComplete": "off",
                              "id": "downshift-2-input",
                              "onBlur": [Function],
                              "onKeyDown": [Function],
                              "style": Object {
                                "flex": "1 1 auto",
                                "minWidth": "200px",
                                "width": "auto",
                              },
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          startAdornment={
                            Array [
                              <WithStyles(PickerChip)
                                item="some-item"
                                label="some label"
                                onDelete={[Function]}
                              />,
                            ]
                          }
                          type="text"
                          value=""
                        >
                          <InputBase
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-25",
                                "adornedStart": "MuiInputBase-adornedStart-24",
                                "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                                "error": "MuiInputBase-error-26 MuiInput-error-12",
                                "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                                "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                                "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                                "input": "MuiInputBase-input-30 MuiInput-input-15",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                                "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                                "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                                "marginDense": "MuiInputBase-marginDense-27",
                                "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                                "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "aria-labelledby": "downshift-2-label",
                                "autoComplete": "off",
                                "id": "downshift-2-input",
                                "onBlur": [Function],
                                "onKeyDown": [Function],
                                "style": Object {
                                  "flex": "1 1 auto",
                                  "minWidth": "200px",
                                  "width": "auto",
                                },
                              }
                            }
                            muiFormControl={
                              Object {
                                "adornedStart": true,
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "margin": "none",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": false,
                                "variant": "standard",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            startAdornment={
                              Array [
                                <WithStyles(PickerChip)
                                  item="some-item"
                                  label="some label"
                                  onDelete={[Function]}
                                />,
                              ]
                            }
                            type="text"
                            value=""
                          >
                            <div
                              className="MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11 MuiInputBase-formControl-21 MuiInput-formControl-8 MuiInputBase-adornedStart-24"
                              onClick={[Function]}
                            >
                              <WithStyles(PickerChip)
                                item="some-item"
                                key="some-item"
                                label="some label"
                                onDelete={[Function]}
                              >
                                <PickerChip
                                  classes={
                                    Object {
                                      "root": "PickerChip-root-37",
                                    }
                                  }
                                  item="some-item"
                                  label="some label"
                                  onDelete={[Function]}
                                >
                                  <WithStyles(Tooltip)
                                    title="Click to show preview"
                                  >
                                    <Tooltip
                                      TransitionComponent={[Function]}
                                      classes={
                                        Object {
                                          "popper": "MuiTooltip-popper-38",
                                          "popperInteractive": "MuiTooltip-popperInteractive-39",
                                          "tooltip": "MuiTooltip-tooltip-40",
                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom-45",
                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft-42",
                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight-43",
                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop-44",
                                          "touch": "MuiTooltip-touch-41",
                                        }
                                      }
                                      disableFocusListener={false}
                                      disableHoverListener={false}
                                      disableTouchListener={false}
                                      enterDelay={0}
                                      enterTouchDelay={1000}
                                      interactive={false}
                                      leaveDelay={0}
                                      leaveTouchDelay={1500}
                                      placement="bottom"
                                      theme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "hover": "rgba(0, 0, 0, 0.08)",
                                              "hoverOpacity": 0.08,
                                              "selected": "rgba(0, 0, 0, 0.14)",
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                            "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                            "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": Object {
                                            "unit": 8,
                                          },
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.46429em",
                                            },
                                            "body1Next": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "lineHeight": "1.71429em",
                                            },
                                            "body2Next": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.5,
                                            },
                                            "button": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "textTransform": "uppercase",
                                            },
                                            "buttonNext": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.375em",
                                            },
                                            "captionNext": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "display1": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.20588em",
                                            },
                                            "display2": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.8125rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.13333em",
                                              "marginLeft": "-.02em",
                                            },
                                            "display3": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "-.02em",
                                              "lineHeight": "1.30357em",
                                              "marginLeft": "-.02em",
                                            },
                                            "display4": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "7rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-.04em",
                                              "lineHeight": "1.14286em",
                                              "marginLeft": "-.04em",
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1,
                                            },
                                            "h2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1,
                                            },
                                            "h3": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.04,
                                            },
                                            "h4": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.17,
                                            },
                                            "h5": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.33,
                                            },
                                            "h6": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "headline": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.35417em",
                                            },
                                            "overline": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subheading": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.5em",
                                            },
                                            "subtitle1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                            "title": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.3125rem",
                                              "fontWeight": 500,
                                              "lineHeight": "1.16667em",
                                            },
                                            "useNextVariants": false,
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      title="Click to show preview"
                                    >
                                      <RootRef
                                        rootRef={[Function]}
                                      >
                                        <WithStyles(Chip)
                                          aria-describedby={null}
                                          className="PickerChip-root-37"
                                          label="some label"
                                          onBlur={[Function]}
                                          onDelete={[Function]}
                                          onFocus={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={-1}
                                          title="Click to show preview"
                                        >
                                          <Chip
                                            aria-describedby={null}
                                            className="PickerChip-root-37"
                                            classes={
                                              Object {
                                                "avatar": "MuiChip-avatar-58",
                                                "avatarChildren": "MuiChip-avatarChildren-61",
                                                "avatarColorPrimary": "MuiChip-avatarColorPrimary-59",
                                                "avatarColorSecondary": "MuiChip-avatarColorSecondary-60",
                                                "clickable": "MuiChip-clickable-49",
                                                "clickableColorPrimary": "MuiChip-clickableColorPrimary-50",
                                                "clickableColorSecondary": "MuiChip-clickableColorSecondary-51",
                                                "colorPrimary": "MuiChip-colorPrimary-47",
                                                "colorSecondary": "MuiChip-colorSecondary-48",
                                                "deletable": "MuiChip-deletable-52",
                                                "deletableColorPrimary": "MuiChip-deletableColorPrimary-53",
                                                "deletableColorSecondary": "MuiChip-deletableColorSecondary-54",
                                                "deleteIcon": "MuiChip-deleteIcon-66",
                                                "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary-67",
                                                "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary-68",
                                                "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary-69",
                                                "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary-70",
                                                "icon": "MuiChip-icon-62",
                                                "iconColorPrimary": "MuiChip-iconColorPrimary-63",
                                                "iconColorSecondary": "MuiChip-iconColorSecondary-64",
                                                "label": "MuiChip-label-65",
                                                "outlined": "MuiChip-outlined-55",
                                                "outlinedPrimary": "MuiChip-outlinedPrimary-56",
                                                "outlinedSecondary": "MuiChip-outlinedSecondary-57",
                                                "root": "MuiChip-root-46",
                                              }
                                            }
                                            color="default"
                                            component="div"
                                            label="some label"
                                            onBlur={[Function]}
                                            onDelete={[Function]}
                                            onFocus={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Click to show preview"
                                            variant="default"
                                          >
                                            <div
                                              aria-describedby={null}
                                              className="MuiChip-root-46 MuiChip-deletable-52 PickerChip-root-37"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseOver={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={-1}
                                              title="Click to show preview"
                                            >
                                              <span
                                                className="MuiChip-label-65"
                                              >
                                                some label
                                              </span>
                                              <pure(Cancel)
                                                className="MuiChip-deleteIcon-66"
                                                onClick={[Function]}
                                              >
                                                <Cancel
                                                  className="MuiChip-deleteIcon-66"
                                                  onClick={[Function]}
                                                >
                                                  <WithStyles(SvgIcon)
                                                    className="MuiChip-deleteIcon-66"
                                                    onClick={[Function]}
                                                  >
                                                    <SvgIcon
                                                      className="MuiChip-deleteIcon-66"
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction-74",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled-76",
                                                          "colorError": "MuiSvgIcon-colorError-75",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary-72",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary-73",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-77",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-79",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-78",
                                                          "root": "MuiSvgIcon-root-71",
                                                        }
                                                      }
                                                      color="inherit"
                                                      component="svg"
                                                      fontSize="default"
                                                      onClick={[Function]}
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="MuiSvgIcon-root-71 MuiChip-deleteIcon-66"
                                                        focusable="false"
                                                        onClick={[Function]}
                                                        role="presentation"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                        />
                                                      </svg>
                                                    </SvgIcon>
                                                  </WithStyles(SvgIcon)>
                                                </Cancel>
                                              </pure(Cancel)>
                                            </div>
                                          </Chip>
                                        </WithStyles(Chip)>
                                      </RootRef>
                                      <Popper
                                        className="MuiTooltip-popper-38"
                                        disablePortal={false}
                                        id={null}
                                        open={false}
                                        placement="bottom"
                                        transition={true}
                                      />
                                    </Tooltip>
                                  </WithStyles(Tooltip)>
                                </PickerChip>
                              </WithStyles(PickerChip)>
                              <input
                                aria-activedescendant={null}
                                aria-autocomplete="list"
                                aria-controls={null}
                                aria-invalid={false}
                                aria-labelledby="downshift-2-label"
                                autoComplete="off"
                                className="MuiInputBase-input-30 MuiInput-input-15 MuiInputBase-inputAdornedStart-35"
                                disabled={false}
                                id="downshift-2-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                required={false}
                                style={
                                  Object {
                                    "flex": "1 1 auto",
                                    "minWidth": "200px",
                                    "width": "auto",
                                  }
                                }
                                type="text"
                                value=""
                              />
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </div>
              </FormControl>
            </WithStyles(FormControl)>
          </TextField>
        </PickerInput>
      </WithStyles(PickerInput)>
      <PickerDropdown
        clearItems={[Function]}
        clearSelection={[Function]}
        closeMenu={[Function]}
        getItemProps={[Function]}
        getLabelProps={[Function]}
        getMenuProps={[Function]}
        getRootProps={[Function]}
        getToggleButtonProps={[Function]}
        highlightedIndex={null}
        id="downshift-2"
        inputValue=""
        isOpen={false}
        itemToString={[Function]}
        openMenu={[Function]}
        reset={[Function]}
        selectHighlightedItem={[Function]}
        selectItem={[Function]}
        selectItemAtIndex={[Function]}
        selectedItem={null}
        selectedItems={
          Array [
            "some-item",
          ]
        }
        setHighlightedIndex={[Function]}
        setItemCount={[Function]}
        setState={[Function]}
        toggleMenu={[Function]}
        unsetItemCount={[Function]}
      />
    </div>
  </Downshift>
</MultiPicker>
`;

exports[`Preview Picker renders custom suggestion components 1`] = `
<MultiPicker
  SuggestionComponent={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "inputValue": "some text",
            "isHighlighted": false,
            "isSelected": true,
            "item": "some suggestion",
            "itemId": "some suggestion",
          },
          Object {},
        ],
      ],
      "results": undefined,
    }
  }
  getSuggestedItems={[Function]}
  itemToString={[Function]}
  onChange={[Function]}
  value={
    Array [
      "some suggestion",
    ]
  }
>
  <Downshift
    defaultHighlightedIndex={null}
    defaultIsOpen={false}
    environment={[Window]}
    fullWidth={true}
    getA11yStatusMessage={[Function]}
    inputValue="some text"
    itemToString={[Function]}
    onChange={[Function]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <div
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-6-label"
      aria-owns="downshift-6-menu"
      role="combobox"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <WithStyles(PickerInput)
        aria-activedescendant={null}
        aria-autocomplete="list"
        aria-controls="downshift-6-menu"
        aria-labelledby="downshift-6-label"
        autoComplete="off"
        id="downshift-6-input"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        startAdornment={
          Array [
            <WithStyles(PickerChip)
              item="some suggestion"
              label="some suggestion"
              onDelete={[Function]}
            />,
          ]
        }
        value="some text"
      >
        <PickerInput
          aria-activedescendant={null}
          aria-autocomplete="list"
          aria-controls="downshift-6-menu"
          aria-labelledby="downshift-6-label"
          autoComplete="off"
          classes={
            Object {
              "InputRoot": "PickerInput-InputRoot-1",
              "inputRoot": "PickerInput-inputRoot-2",
            }
          }
          fullWidth={false}
          id="downshift-6-input"
          label=""
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          startAdornment={
            Array [
              <WithStyles(PickerChip)
                item="some suggestion"
                label="some suggestion"
                onDelete={[Function]}
              />,
            ]
          }
          value="some text"
        >
          <TextField
            InputLabelProps={
              Object {
                "shrink": true,
              }
            }
            InputProps={
              Object {
                "classes": Object {
                  "root": "PickerInput-InputRoot-1",
                },
                "inputProps": Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": "downshift-6-menu",
                  "aria-labelledby": "downshift-6-label",
                  "autoComplete": "off",
                  "id": "downshift-6-input",
                  "onBlur": [Function],
                  "onKeyDown": [Function],
                  "style": Object {
                    "flex": "1 1 auto",
                    "minWidth": "200px",
                    "width": "auto",
                  },
                },
                "startAdornment": Array [
                  <WithStyles(PickerChip)
                    item="some suggestion"
                    label="some suggestion"
                    onDelete={[Function]}
                  />,
                ],
              }
            }
            fullWidth={false}
            label=""
            onChange={[Function]}
            required={false}
            select={false}
            value="some text"
            variant="standard"
          >
            <WithStyles(FormControl)
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <FormControl
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth-6",
                    "marginDense": "MuiFormControl-marginDense-5",
                    "marginNormal": "MuiFormControl-marginNormal-4",
                    "root": "MuiFormControl-root-3",
                  }
                }
                component="div"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="none"
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root-3"
                >
                  <WithStyles(Input)
                    classes={
                      Object {
                        "root": "PickerInput-InputRoot-1",
                      }
                    }
                    fullWidth={false}
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": "downshift-6-menu",
                        "aria-labelledby": "downshift-6-label",
                        "autoComplete": "off",
                        "id": "downshift-6-input",
                        "onBlur": [Function],
                        "onKeyDown": [Function],
                        "style": Object {
                          "flex": "1 1 auto",
                          "minWidth": "200px",
                          "width": "auto",
                        },
                      }
                    }
                    onChange={[Function]}
                    startAdornment={
                      Array [
                        <WithStyles(PickerChip)
                          item="some suggestion"
                          label="some suggestion"
                          onDelete={[Function]}
                        />,
                      ]
                    }
                    value="some text"
                  >
                    <Input
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-10",
                          "error": "MuiInput-error-12",
                          "focused": "MuiInput-focused-9",
                          "formControl": "MuiInput-formControl-8",
                          "fullWidth": "MuiInput-fullWidth-14",
                          "input": "MuiInput-input-15",
                          "inputMarginDense": "MuiInput-inputMarginDense-16",
                          "inputMultiline": "MuiInput-inputMultiline-17",
                          "inputType": "MuiInput-inputType-18",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                          "multiline": "MuiInput-multiline-13",
                          "root": "MuiInput-root-7 PickerInput-InputRoot-1",
                          "underline": "MuiInput-underline-11",
                        }
                      }
                      fullWidth={false}
                      inputProps={
                        Object {
                          "aria-activedescendant": null,
                          "aria-autocomplete": "list",
                          "aria-controls": "downshift-6-menu",
                          "aria-labelledby": "downshift-6-label",
                          "autoComplete": "off",
                          "id": "downshift-6-input",
                          "onBlur": [Function],
                          "onKeyDown": [Function],
                          "style": Object {
                            "flex": "1 1 auto",
                            "minWidth": "200px",
                            "width": "auto",
                          },
                        }
                      }
                      onChange={[Function]}
                      startAdornment={
                        Array [
                          <WithStyles(PickerChip)
                            item="some suggestion"
                            label="some suggestion"
                            onDelete={[Function]}
                          />,
                        ]
                      }
                      value="some text"
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-10",
                            "error": "MuiInput-error-12",
                            "focused": "MuiInput-focused-9",
                            "formControl": "MuiInput-formControl-8",
                            "fullWidth": "MuiInput-fullWidth-14",
                            "input": "MuiInput-input-15",
                            "inputMarginDense": "MuiInput-inputMarginDense-16",
                            "inputMultiline": "MuiInput-inputMultiline-17",
                            "inputType": "MuiInput-inputType-18",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                            "multiline": "MuiInput-multiline-13",
                            "root": "MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": "downshift-6-menu",
                            "aria-labelledby": "downshift-6-label",
                            "autoComplete": "off",
                            "id": "downshift-6-input",
                            "onBlur": [Function],
                            "onKeyDown": [Function],
                            "style": Object {
                              "flex": "1 1 auto",
                              "minWidth": "200px",
                              "width": "auto",
                            },
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        startAdornment={
                          Array [
                            <WithStyles(PickerChip)
                              item="some suggestion"
                              label="some suggestion"
                              onDelete={[Function]}
                            />,
                          ]
                        }
                        type="text"
                        value="some text"
                      >
                        <WithFormControlContext(InputBase)
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-25",
                              "adornedStart": "MuiInputBase-adornedStart-24",
                              "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                              "error": "MuiInputBase-error-26 MuiInput-error-12",
                              "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                              "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                              "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                              "input": "MuiInputBase-input-30 MuiInput-input-15",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                              "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                              "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                              "marginDense": "MuiInputBase-marginDense-27",
                              "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                              "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            }
                          }
                          fullWidth={false}
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": "downshift-6-menu",
                              "aria-labelledby": "downshift-6-label",
                              "autoComplete": "off",
                              "id": "downshift-6-input",
                              "onBlur": [Function],
                              "onKeyDown": [Function],
                              "style": Object {
                                "flex": "1 1 auto",
                                "minWidth": "200px",
                                "width": "auto",
                              },
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          startAdornment={
                            Array [
                              <WithStyles(PickerChip)
                                item="some suggestion"
                                label="some suggestion"
                                onDelete={[Function]}
                              />,
                            ]
                          }
                          type="text"
                          value="some text"
                        >
                          <InputBase
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-25",
                                "adornedStart": "MuiInputBase-adornedStart-24",
                                "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                                "error": "MuiInputBase-error-26 MuiInput-error-12",
                                "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                                "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                                "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                                "input": "MuiInputBase-input-30 MuiInput-input-15",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                                "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                                "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                                "marginDense": "MuiInputBase-marginDense-27",
                                "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                                "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": "downshift-6-menu",
                                "aria-labelledby": "downshift-6-label",
                                "autoComplete": "off",
                                "id": "downshift-6-input",
                                "onBlur": [Function],
                                "onKeyDown": [Function],
                                "style": Object {
                                  "flex": "1 1 auto",
                                  "minWidth": "200px",
                                  "width": "auto",
                                },
                              }
                            }
                            muiFormControl={
                              Object {
                                "adornedStart": true,
                                "disabled": false,
                                "error": false,
                                "filled": true,
                                "focused": false,
                                "margin": "none",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": false,
                                "variant": "standard",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            startAdornment={
                              Array [
                                <WithStyles(PickerChip)
                                  item="some suggestion"
                                  label="some suggestion"
                                  onDelete={[Function]}
                                />,
                              ]
                            }
                            type="text"
                            value="some text"
                          >
                            <div
                              className="MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11 MuiInputBase-formControl-21 MuiInput-formControl-8 MuiInputBase-adornedStart-24"
                              onClick={[Function]}
                            >
                              <WithStyles(PickerChip)
                                item="some suggestion"
                                key="some suggestion"
                                label="some suggestion"
                                onDelete={[Function]}
                              >
                                <PickerChip
                                  classes={
                                    Object {
                                      "root": "PickerChip-root-37",
                                    }
                                  }
                                  item="some suggestion"
                                  label="some suggestion"
                                  onDelete={[Function]}
                                >
                                  <WithStyles(Tooltip)
                                    title="Click to show preview"
                                  >
                                    <Tooltip
                                      TransitionComponent={[Function]}
                                      classes={
                                        Object {
                                          "popper": "MuiTooltip-popper-38",
                                          "popperInteractive": "MuiTooltip-popperInteractive-39",
                                          "tooltip": "MuiTooltip-tooltip-40",
                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom-45",
                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft-42",
                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight-43",
                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop-44",
                                          "touch": "MuiTooltip-touch-41",
                                        }
                                      }
                                      disableFocusListener={false}
                                      disableHoverListener={false}
                                      disableTouchListener={false}
                                      enterDelay={0}
                                      enterTouchDelay={1000}
                                      interactive={false}
                                      leaveDelay={0}
                                      leaveTouchDelay={1500}
                                      placement="bottom"
                                      theme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "hover": "rgba(0, 0, 0, 0.08)",
                                              "hoverOpacity": 0.08,
                                              "selected": "rgba(0, 0, 0, 0.14)",
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                            "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                            "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": Object {
                                            "unit": 8,
                                          },
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.46429em",
                                            },
                                            "body1Next": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "lineHeight": "1.71429em",
                                            },
                                            "body2Next": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.5,
                                            },
                                            "button": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "textTransform": "uppercase",
                                            },
                                            "buttonNext": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.375em",
                                            },
                                            "captionNext": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "display1": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.20588em",
                                            },
                                            "display2": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.8125rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.13333em",
                                              "marginLeft": "-.02em",
                                            },
                                            "display3": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "-.02em",
                                              "lineHeight": "1.30357em",
                                              "marginLeft": "-.02em",
                                            },
                                            "display4": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "7rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-.04em",
                                              "lineHeight": "1.14286em",
                                              "marginLeft": "-.04em",
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1,
                                            },
                                            "h2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1,
                                            },
                                            "h3": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.04,
                                            },
                                            "h4": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.17,
                                            },
                                            "h5": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.33,
                                            },
                                            "h6": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "headline": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.35417em",
                                            },
                                            "overline": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subheading": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.5em",
                                            },
                                            "subtitle1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                            "title": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.3125rem",
                                              "fontWeight": 500,
                                              "lineHeight": "1.16667em",
                                            },
                                            "useNextVariants": false,
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      title="Click to show preview"
                                    >
                                      <RootRef
                                        rootRef={[Function]}
                                      >
                                        <WithStyles(Chip)
                                          aria-describedby={null}
                                          className="PickerChip-root-37"
                                          label="some suggestion"
                                          onBlur={[Function]}
                                          onDelete={[Function]}
                                          onFocus={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={-1}
                                          title="Click to show preview"
                                        >
                                          <Chip
                                            aria-describedby={null}
                                            className="PickerChip-root-37"
                                            classes={
                                              Object {
                                                "avatar": "MuiChip-avatar-58",
                                                "avatarChildren": "MuiChip-avatarChildren-61",
                                                "avatarColorPrimary": "MuiChip-avatarColorPrimary-59",
                                                "avatarColorSecondary": "MuiChip-avatarColorSecondary-60",
                                                "clickable": "MuiChip-clickable-49",
                                                "clickableColorPrimary": "MuiChip-clickableColorPrimary-50",
                                                "clickableColorSecondary": "MuiChip-clickableColorSecondary-51",
                                                "colorPrimary": "MuiChip-colorPrimary-47",
                                                "colorSecondary": "MuiChip-colorSecondary-48",
                                                "deletable": "MuiChip-deletable-52",
                                                "deletableColorPrimary": "MuiChip-deletableColorPrimary-53",
                                                "deletableColorSecondary": "MuiChip-deletableColorSecondary-54",
                                                "deleteIcon": "MuiChip-deleteIcon-66",
                                                "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary-67",
                                                "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary-68",
                                                "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary-69",
                                                "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary-70",
                                                "icon": "MuiChip-icon-62",
                                                "iconColorPrimary": "MuiChip-iconColorPrimary-63",
                                                "iconColorSecondary": "MuiChip-iconColorSecondary-64",
                                                "label": "MuiChip-label-65",
                                                "outlined": "MuiChip-outlined-55",
                                                "outlinedPrimary": "MuiChip-outlinedPrimary-56",
                                                "outlinedSecondary": "MuiChip-outlinedSecondary-57",
                                                "root": "MuiChip-root-46",
                                              }
                                            }
                                            color="default"
                                            component="div"
                                            label="some suggestion"
                                            onBlur={[Function]}
                                            onDelete={[Function]}
                                            onFocus={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Click to show preview"
                                            variant="default"
                                          >
                                            <div
                                              aria-describedby={null}
                                              className="MuiChip-root-46 MuiChip-deletable-52 PickerChip-root-37"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseOver={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={-1}
                                              title="Click to show preview"
                                            >
                                              <span
                                                className="MuiChip-label-65"
                                              >
                                                some suggestion
                                              </span>
                                              <pure(Cancel)
                                                className="MuiChip-deleteIcon-66"
                                                onClick={[Function]}
                                              >
                                                <Cancel
                                                  className="MuiChip-deleteIcon-66"
                                                  onClick={[Function]}
                                                >
                                                  <WithStyles(SvgIcon)
                                                    className="MuiChip-deleteIcon-66"
                                                    onClick={[Function]}
                                                  >
                                                    <SvgIcon
                                                      className="MuiChip-deleteIcon-66"
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction-74",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled-76",
                                                          "colorError": "MuiSvgIcon-colorError-75",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary-72",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary-73",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-77",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-79",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-78",
                                                          "root": "MuiSvgIcon-root-71",
                                                        }
                                                      }
                                                      color="inherit"
                                                      component="svg"
                                                      fontSize="default"
                                                      onClick={[Function]}
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="MuiSvgIcon-root-71 MuiChip-deleteIcon-66"
                                                        focusable="false"
                                                        onClick={[Function]}
                                                        role="presentation"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                        />
                                                      </svg>
                                                    </SvgIcon>
                                                  </WithStyles(SvgIcon)>
                                                </Cancel>
                                              </pure(Cancel)>
                                            </div>
                                          </Chip>
                                        </WithStyles(Chip)>
                                      </RootRef>
                                      <Popper
                                        anchorEl={
                                          <div
                                            class="MuiChip-root-46 MuiChip-deletable-52 PickerChip-root-37"
                                            role="button"
                                            tabindex="-1"
                                            title="Click to show preview"
                                          >
                                            <span
                                              class="MuiChip-label-65"
                                            >
                                              some suggestion
                                            </span>
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root-71 MuiChip-deleteIcon-66"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                              />
                                            </svg>
                                          </div>
                                        }
                                        className="MuiTooltip-popper-38"
                                        disablePortal={false}
                                        id={null}
                                        open={false}
                                        placement="bottom"
                                        transition={true}
                                      />
                                    </Tooltip>
                                  </WithStyles(Tooltip)>
                                </PickerChip>
                              </WithStyles(PickerChip)>
                              <input
                                aria-activedescendant={null}
                                aria-autocomplete="list"
                                aria-controls="downshift-6-menu"
                                aria-invalid={false}
                                aria-labelledby="downshift-6-label"
                                autoComplete="off"
                                className="MuiInputBase-input-30 MuiInput-input-15 MuiInputBase-inputAdornedStart-35"
                                disabled={false}
                                id="downshift-6-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                required={false}
                                style={
                                  Object {
                                    "flex": "1 1 auto",
                                    "minWidth": "200px",
                                    "width": "auto",
                                  }
                                }
                                type="text"
                                value="some text"
                              />
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </div>
              </FormControl>
            </WithStyles(FormControl)>
          </TextField>
        </PickerInput>
      </WithStyles(PickerInput)>
      <PickerDropdown
        SuggestionComponent={
          [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "inputValue": "some text",
                  "isHighlighted": false,
                  "isSelected": true,
                  "item": "some suggestion",
                  "itemId": "some suggestion",
                },
                Object {},
              ],
            ],
            "results": undefined,
          }
        }
        clearItems={[Function]}
        clearSelection={[Function]}
        closeMenu={[Function]}
        getItemProps={[Function]}
        getLabelProps={[Function]}
        getMenuProps={[Function]}
        getRootProps={[Function]}
        getToggleButtonProps={[Function]}
        highlightedIndex={null}
        id="downshift-6"
        inputValue="some text"
        isOpen={true}
        itemToString={[Function]}
        openMenu={[Function]}
        reset={[Function]}
        selectHighlightedItem={[Function]}
        selectItem={[Function]}
        selectItemAtIndex={[Function]}
        selectedItem={null}
        selectedItems={
          Array [
            "some suggestion",
          ]
        }
        setHighlightedIndex={[Function]}
        setItemCount={[Function]}
        setState={[Function]}
        suggestions={
          Array [
            "some suggestion",
          ]
        }
        toggleMenu={[Function]}
        unsetItemCount={[Function]}
      >
        <WithStyles(Paper)
          square={true}
          style={
            Object {
              "position": "absolute",
              "width": "100%",
              "zIndex": 100,
            }
          }
        >
          <Paper
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0-85",
                "elevation1": "MuiPaper-elevation1-86",
                "elevation10": "MuiPaper-elevation10-95",
                "elevation11": "MuiPaper-elevation11-96",
                "elevation12": "MuiPaper-elevation12-97",
                "elevation13": "MuiPaper-elevation13-98",
                "elevation14": "MuiPaper-elevation14-99",
                "elevation15": "MuiPaper-elevation15-100",
                "elevation16": "MuiPaper-elevation16-101",
                "elevation17": "MuiPaper-elevation17-102",
                "elevation18": "MuiPaper-elevation18-103",
                "elevation19": "MuiPaper-elevation19-104",
                "elevation2": "MuiPaper-elevation2-87",
                "elevation20": "MuiPaper-elevation20-105",
                "elevation21": "MuiPaper-elevation21-106",
                "elevation22": "MuiPaper-elevation22-107",
                "elevation23": "MuiPaper-elevation23-108",
                "elevation24": "MuiPaper-elevation24-109",
                "elevation3": "MuiPaper-elevation3-88",
                "elevation4": "MuiPaper-elevation4-89",
                "elevation5": "MuiPaper-elevation5-90",
                "elevation6": "MuiPaper-elevation6-91",
                "elevation7": "MuiPaper-elevation7-92",
                "elevation8": "MuiPaper-elevation8-93",
                "elevation9": "MuiPaper-elevation9-94",
                "root": "MuiPaper-root-83",
                "rounded": "MuiPaper-rounded-84",
              }
            }
            component="div"
            elevation={2}
            square={true}
            style={
              Object {
                "position": "absolute",
                "width": "100%",
                "zIndex": 100,
              }
            }
          >
            <div
              className="MuiPaper-root-83 MuiPaper-elevation2-87"
              style={
                Object {
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": 100,
                }
              }
            >
              <PickerSuggestions
                SuggestionComponent={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "inputValue": "some text",
                          "isHighlighted": false,
                          "isSelected": true,
                          "item": "some suggestion",
                          "itemId": "some suggestion",
                        },
                        Object {},
                      ],
                    ],
                    "results": undefined,
                  }
                }
                clearItems={[Function]}
                clearSelection={[Function]}
                closeMenu={[Function]}
                getItemProps={[Function]}
                getLabelProps={[Function]}
                getMenuProps={[Function]}
                getRootProps={[Function]}
                getToggleButtonProps={[Function]}
                highlightedIndex={null}
                id="downshift-6"
                inputValue="some text"
                itemToString={[Function]}
                openMenu={[Function]}
                reset={[Function]}
                selectHighlightedItem={[Function]}
                selectItem={[Function]}
                selectItemAtIndex={[Function]}
                selectedItem={null}
                selectedItems={
                  Array [
                    "some suggestion",
                  ]
                }
                setHighlightedIndex={[Function]}
                setItemCount={[Function]}
                setState={[Function]}
                suggestions={
                  Array [
                    "some suggestion",
                  ]
                }
                toggleMenu={[Function]}
                unsetItemCount={[Function]}
              >
                <WithStyles(MenuItem)
                  aria-selected={false}
                  className="suggestion"
                  id="downshift-6-item-0"
                  key="some suggestion"
                  onClick={[Function]}
                  onMouseDown={[Function]}
                  onMouseMove={[Function]}
                  role="option"
                  style={
                    Object {
                      "backgroundColor": "white",
                    }
                  }
                >
                  <MenuItem
                    aria-selected={false}
                    className="suggestion"
                    classes={
                      Object {
                        "gutters": "MuiMenuItem-gutters-165",
                        "root": "MuiMenuItem-root-164",
                        "selected": "MuiMenuItem-selected-166",
                      }
                    }
                    component="li"
                    disableGutters={false}
                    id="downshift-6-item-0"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                    onMouseMove={[Function]}
                    role="option"
                    style={
                      Object {
                        "backgroundColor": "white",
                      }
                    }
                  >
                    <WithStyles(ListItem)
                      aria-selected={false}
                      button={true}
                      className="MuiMenuItem-root-164 MuiMenuItem-gutters-165 suggestion"
                      component="li"
                      disableGutters={false}
                      id="downshift-6-item-0"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                      style={
                        Object {
                          "backgroundColor": "white",
                        }
                      }
                      tabIndex={-1}
                    >
                      <ListItem
                        ContainerComponent="li"
                        alignItems="center"
                        aria-selected={false}
                        button={true}
                        className="MuiMenuItem-root-164 MuiMenuItem-gutters-165 suggestion"
                        classes={
                          Object {
                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart-172",
                            "button": "MuiListItem-button-176",
                            "container": "MuiListItem-container-168",
                            "default": "MuiListItem-default-170",
                            "dense": "MuiListItem-dense-171",
                            "disabled": "MuiListItem-disabled-173",
                            "divider": "MuiListItem-divider-174",
                            "focusVisible": "MuiListItem-focusVisible-169",
                            "gutters": "MuiListItem-gutters-175",
                            "root": "MuiListItem-root-167",
                            "secondaryAction": "MuiListItem-secondaryAction-177",
                            "selected": "MuiListItem-selected-178",
                          }
                        }
                        component="li"
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        id="downshift-6-item-0"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                        selected={false}
                        style={
                          Object {
                            "backgroundColor": "white",
                          }
                        }
                        tabIndex={-1}
                      >
                        <MergeListContext
                          alignItems="center"
                          dense={false}
                        >
                          <WithStyles(ButtonBase)
                            aria-selected={false}
                            className="MuiListItem-root-167 MuiListItem-default-170 MuiListItem-gutters-175 MuiListItem-button-176 MuiMenuItem-root-164 MuiMenuItem-gutters-165 suggestion"
                            component="li"
                            disabled={false}
                            focusVisibleClassName="MuiListItem-focusVisible-169"
                            id="downshift-6-item-0"
                            onClick={[Function]}
                            onMouseDown={[Function]}
                            onMouseMove={[Function]}
                            role="option"
                            style={
                              Object {
                                "backgroundColor": "white",
                              }
                            }
                            tabIndex={-1}
                          >
                            <ButtonBase
                              aria-selected={false}
                              centerRipple={false}
                              className="MuiListItem-root-167 MuiListItem-default-170 MuiListItem-gutters-175 MuiListItem-button-176 MuiMenuItem-root-164 MuiMenuItem-gutters-165 suggestion"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-180",
                                  "focusVisible": "MuiButtonBase-focusVisible-181",
                                  "root": "MuiButtonBase-root-179",
                                }
                              }
                              component="li"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={false}
                              focusVisibleClassName="MuiListItem-focusVisible-169"
                              id="downshift-6-item-0"
                              onClick={[Function]}
                              onMouseDown={[Function]}
                              onMouseMove={[Function]}
                              role="option"
                              style={
                                Object {
                                  "backgroundColor": "white",
                                }
                              }
                              tabIndex={-1}
                              type="button"
                            >
                              <li
                                aria-selected={false}
                                className="MuiButtonBase-root-179 MuiListItem-root-167 MuiListItem-default-170 MuiListItem-gutters-175 MuiListItem-button-176 MuiMenuItem-root-164 MuiMenuItem-gutters-165 suggestion"
                                id="downshift-6-item-0"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onContextMenu={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseMove={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                tabIndex={-1}
                              >
                                <mockConstructor
                                  inputValue="some text"
                                  isHighlighted={false}
                                  isSelected={true}
                                  item="some suggestion"
                                  itemId="some suggestion"
                                  key=".0"
                                >
                                  <span>
                                    Some Custom Suggestion
                                  </span>
                                </mockConstructor>
                                <NoSsr
                                  defer={false}
                                  fallback={null}
                                >
                                  <WithStyles(TouchRipple)
                                    center={false}
                                    innerRef={[Function]}
                                  >
                                    <TouchRipple
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child-186",
                                          "childLeaving": "MuiTouchRipple-childLeaving-187",
                                          "childPulsate": "MuiTouchRipple-childPulsate-188",
                                          "ripple": "MuiTouchRipple-ripple-183",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-185",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible-184",
                                          "root": "MuiTouchRipple-root-182",
                                        }
                                      }
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        className="MuiTouchRipple-root-182"
                                        component="span"
                                        enter={true}
                                        exit={true}
                                      >
                                        <span
                                          className="MuiTouchRipple-root-182"
                                        />
                                      </TransitionGroup>
                                    </TouchRipple>
                                  </WithStyles(TouchRipple)>
                                </NoSsr>
                              </li>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </MergeListContext>
                      </ListItem>
                    </WithStyles(ListItem)>
                  </MenuItem>
                </WithStyles(MenuItem)>
              </PickerSuggestions>
            </div>
          </Paper>
        </WithStyles(Paper)>
      </PickerDropdown>
    </div>
  </Downshift>
</MultiPicker>
`;

exports[`Preview Picker renders dropdown when typing 1`] = `
<MultiPicker
  getSuggestedItems={[Function]}
  itemToString={[Function]}
  onChange={[Function]}
  value={Array []}
>
  <Downshift
    defaultHighlightedIndex={null}
    defaultIsOpen={false}
    environment={[Window]}
    fullWidth={true}
    getA11yStatusMessage={[Function]}
    inputValue="some text"
    itemToString={[Function]}
    onChange={[Function]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <div
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-4-label"
      aria-owns="downshift-4-menu"
      role="combobox"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <WithStyles(PickerInput)
        aria-activedescendant={null}
        aria-autocomplete="list"
        aria-controls="downshift-4-menu"
        aria-labelledby="downshift-4-label"
        autoComplete="off"
        id="downshift-4-input"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        startAdornment={Array []}
        value="some text"
      >
        <PickerInput
          aria-activedescendant={null}
          aria-autocomplete="list"
          aria-controls="downshift-4-menu"
          aria-labelledby="downshift-4-label"
          autoComplete="off"
          classes={
            Object {
              "InputRoot": "PickerInput-InputRoot-1",
              "inputRoot": "PickerInput-inputRoot-2",
            }
          }
          fullWidth={false}
          id="downshift-4-input"
          label=""
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          startAdornment={Array []}
          value="some text"
        >
          <TextField
            InputLabelProps={
              Object {
                "shrink": true,
              }
            }
            InputProps={
              Object {
                "classes": Object {
                  "root": "PickerInput-InputRoot-1",
                },
                "inputProps": Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": "downshift-4-menu",
                  "aria-labelledby": "downshift-4-label",
                  "autoComplete": "off",
                  "id": "downshift-4-input",
                  "onBlur": [Function],
                  "onKeyDown": [Function],
                  "style": Object {
                    "flex": "1 1 auto",
                    "minWidth": "200px",
                    "width": "auto",
                  },
                },
                "startAdornment": false,
              }
            }
            fullWidth={false}
            label=""
            onChange={[Function]}
            required={false}
            select={false}
            value="some text"
            variant="standard"
          >
            <WithStyles(FormControl)
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <FormControl
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth-6",
                    "marginDense": "MuiFormControl-marginDense-5",
                    "marginNormal": "MuiFormControl-marginNormal-4",
                    "root": "MuiFormControl-root-3",
                  }
                }
                component="div"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="none"
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root-3"
                >
                  <WithStyles(Input)
                    classes={
                      Object {
                        "root": "PickerInput-InputRoot-1",
                      }
                    }
                    fullWidth={false}
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": "downshift-4-menu",
                        "aria-labelledby": "downshift-4-label",
                        "autoComplete": "off",
                        "id": "downshift-4-input",
                        "onBlur": [Function],
                        "onKeyDown": [Function],
                        "style": Object {
                          "flex": "1 1 auto",
                          "minWidth": "200px",
                          "width": "auto",
                        },
                      }
                    }
                    onChange={[Function]}
                    startAdornment={false}
                    value="some text"
                  >
                    <Input
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-10",
                          "error": "MuiInput-error-12",
                          "focused": "MuiInput-focused-9",
                          "formControl": "MuiInput-formControl-8",
                          "fullWidth": "MuiInput-fullWidth-14",
                          "input": "MuiInput-input-15",
                          "inputMarginDense": "MuiInput-inputMarginDense-16",
                          "inputMultiline": "MuiInput-inputMultiline-17",
                          "inputType": "MuiInput-inputType-18",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                          "multiline": "MuiInput-multiline-13",
                          "root": "MuiInput-root-7 PickerInput-InputRoot-1",
                          "underline": "MuiInput-underline-11",
                        }
                      }
                      fullWidth={false}
                      inputProps={
                        Object {
                          "aria-activedescendant": null,
                          "aria-autocomplete": "list",
                          "aria-controls": "downshift-4-menu",
                          "aria-labelledby": "downshift-4-label",
                          "autoComplete": "off",
                          "id": "downshift-4-input",
                          "onBlur": [Function],
                          "onKeyDown": [Function],
                          "style": Object {
                            "flex": "1 1 auto",
                            "minWidth": "200px",
                            "width": "auto",
                          },
                        }
                      }
                      onChange={[Function]}
                      startAdornment={false}
                      value="some text"
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-10",
                            "error": "MuiInput-error-12",
                            "focused": "MuiInput-focused-9",
                            "formControl": "MuiInput-formControl-8",
                            "fullWidth": "MuiInput-fullWidth-14",
                            "input": "MuiInput-input-15",
                            "inputMarginDense": "MuiInput-inputMarginDense-16",
                            "inputMultiline": "MuiInput-inputMultiline-17",
                            "inputType": "MuiInput-inputType-18",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                            "multiline": "MuiInput-multiline-13",
                            "root": "MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": "downshift-4-menu",
                            "aria-labelledby": "downshift-4-label",
                            "autoComplete": "off",
                            "id": "downshift-4-input",
                            "onBlur": [Function],
                            "onKeyDown": [Function],
                            "style": Object {
                              "flex": "1 1 auto",
                              "minWidth": "200px",
                              "width": "auto",
                            },
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        startAdornment={false}
                        type="text"
                        value="some text"
                      >
                        <WithFormControlContext(InputBase)
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-25",
                              "adornedStart": "MuiInputBase-adornedStart-24",
                              "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                              "error": "MuiInputBase-error-26 MuiInput-error-12",
                              "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                              "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                              "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                              "input": "MuiInputBase-input-30 MuiInput-input-15",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                              "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                              "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                              "marginDense": "MuiInputBase-marginDense-27",
                              "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                              "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            }
                          }
                          fullWidth={false}
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": "downshift-4-menu",
                              "aria-labelledby": "downshift-4-label",
                              "autoComplete": "off",
                              "id": "downshift-4-input",
                              "onBlur": [Function],
                              "onKeyDown": [Function],
                              "style": Object {
                                "flex": "1 1 auto",
                                "minWidth": "200px",
                                "width": "auto",
                              },
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          startAdornment={false}
                          type="text"
                          value="some text"
                        >
                          <InputBase
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-25",
                                "adornedStart": "MuiInputBase-adornedStart-24",
                                "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                                "error": "MuiInputBase-error-26 MuiInput-error-12",
                                "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                                "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                                "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                                "input": "MuiInputBase-input-30 MuiInput-input-15",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                                "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                                "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                                "marginDense": "MuiInputBase-marginDense-27",
                                "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                                "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": "downshift-4-menu",
                                "aria-labelledby": "downshift-4-label",
                                "autoComplete": "off",
                                "id": "downshift-4-input",
                                "onBlur": [Function],
                                "onKeyDown": [Function],
                                "style": Object {
                                  "flex": "1 1 auto",
                                  "minWidth": "200px",
                                  "width": "auto",
                                },
                              }
                            }
                            muiFormControl={
                              Object {
                                "adornedStart": false,
                                "disabled": false,
                                "error": false,
                                "filled": true,
                                "focused": false,
                                "margin": "none",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": false,
                                "variant": "standard",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            startAdornment={false}
                            type="text"
                            value="some text"
                          >
                            <div
                              className="MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11 MuiInputBase-formControl-21 MuiInput-formControl-8"
                              onClick={[Function]}
                            >
                              <input
                                aria-activedescendant={null}
                                aria-autocomplete="list"
                                aria-controls="downshift-4-menu"
                                aria-invalid={false}
                                aria-labelledby="downshift-4-label"
                                autoComplete="off"
                                className="MuiInputBase-input-30 MuiInput-input-15"
                                disabled={false}
                                id="downshift-4-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                required={false}
                                style={
                                  Object {
                                    "flex": "1 1 auto",
                                    "minWidth": "200px",
                                    "width": "auto",
                                  }
                                }
                                type="text"
                                value="some text"
                              />
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </div>
              </FormControl>
            </WithStyles(FormControl)>
          </TextField>
        </PickerInput>
      </WithStyles(PickerInput)>
      <PickerDropdown
        clearItems={[Function]}
        clearSelection={[Function]}
        closeMenu={[Function]}
        getItemProps={[Function]}
        getLabelProps={[Function]}
        getMenuProps={[Function]}
        getRootProps={[Function]}
        getToggleButtonProps={[Function]}
        highlightedIndex={null}
        id="downshift-4"
        inputValue="some text"
        isOpen={true}
        itemToString={[Function]}
        openMenu={[Function]}
        reset={[Function]}
        selectHighlightedItem={[Function]}
        selectItem={[Function]}
        selectItemAtIndex={[Function]}
        selectedItem={null}
        selectedItems={Array []}
        setHighlightedIndex={[Function]}
        setItemCount={[Function]}
        setState={[Function]}
        suggestions={
          Array [
            "some suggestion",
          ]
        }
        toggleMenu={[Function]}
        unsetItemCount={[Function]}
      >
        <WithStyles(Paper)
          square={true}
          style={
            Object {
              "position": "absolute",
              "width": "100%",
              "zIndex": 100,
            }
          }
        >
          <Paper
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0-85",
                "elevation1": "MuiPaper-elevation1-86",
                "elevation10": "MuiPaper-elevation10-95",
                "elevation11": "MuiPaper-elevation11-96",
                "elevation12": "MuiPaper-elevation12-97",
                "elevation13": "MuiPaper-elevation13-98",
                "elevation14": "MuiPaper-elevation14-99",
                "elevation15": "MuiPaper-elevation15-100",
                "elevation16": "MuiPaper-elevation16-101",
                "elevation17": "MuiPaper-elevation17-102",
                "elevation18": "MuiPaper-elevation18-103",
                "elevation19": "MuiPaper-elevation19-104",
                "elevation2": "MuiPaper-elevation2-87",
                "elevation20": "MuiPaper-elevation20-105",
                "elevation21": "MuiPaper-elevation21-106",
                "elevation22": "MuiPaper-elevation22-107",
                "elevation23": "MuiPaper-elevation23-108",
                "elevation24": "MuiPaper-elevation24-109",
                "elevation3": "MuiPaper-elevation3-88",
                "elevation4": "MuiPaper-elevation4-89",
                "elevation5": "MuiPaper-elevation5-90",
                "elevation6": "MuiPaper-elevation6-91",
                "elevation7": "MuiPaper-elevation7-92",
                "elevation8": "MuiPaper-elevation8-93",
                "elevation9": "MuiPaper-elevation9-94",
                "root": "MuiPaper-root-83",
                "rounded": "MuiPaper-rounded-84",
              }
            }
            component="div"
            elevation={2}
            square={true}
            style={
              Object {
                "position": "absolute",
                "width": "100%",
                "zIndex": 100,
              }
            }
          >
            <div
              className="MuiPaper-root-83 MuiPaper-elevation2-87"
              style={
                Object {
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": 100,
                }
              }
            >
              <PickerSuggestions
                clearItems={[Function]}
                clearSelection={[Function]}
                closeMenu={[Function]}
                getItemProps={[Function]}
                getLabelProps={[Function]}
                getMenuProps={[Function]}
                getRootProps={[Function]}
                getToggleButtonProps={[Function]}
                highlightedIndex={null}
                id="downshift-4"
                inputValue="some text"
                itemToString={[Function]}
                openMenu={[Function]}
                reset={[Function]}
                selectHighlightedItem={[Function]}
                selectItem={[Function]}
                selectItemAtIndex={[Function]}
                selectedItem={null}
                selectedItems={Array []}
                setHighlightedIndex={[Function]}
                setItemCount={[Function]}
                setState={[Function]}
                suggestions={
                  Array [
                    "some suggestion",
                  ]
                }
                toggleMenu={[Function]}
                unsetItemCount={[Function]}
              >
                <WithStyles(MenuItem)
                  aria-selected={false}
                  className="suggestion"
                  id="downshift-4-item-0"
                  key="some suggestion"
                  onClick={[Function]}
                  onMouseDown={[Function]}
                  onMouseMove={[Function]}
                  role="option"
                  style={
                    Object {
                      "backgroundColor": "white",
                    }
                  }
                >
                  <MenuItem
                    aria-selected={false}
                    className="suggestion"
                    classes={
                      Object {
                        "gutters": "MuiMenuItem-gutters-165",
                        "root": "MuiMenuItem-root-164",
                        "selected": "MuiMenuItem-selected-166",
                      }
                    }
                    component="li"
                    disableGutters={false}
                    id="downshift-4-item-0"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                    onMouseMove={[Function]}
                    role="option"
                    style={
                      Object {
                        "backgroundColor": "white",
                      }
                    }
                  >
                    <WithStyles(ListItem)
                      aria-selected={false}
                      button={true}
                      className="MuiMenuItem-root-164 MuiMenuItem-gutters-165 suggestion"
                      component="li"
                      disableGutters={false}
                      id="downshift-4-item-0"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                      style={
                        Object {
                          "backgroundColor": "white",
                        }
                      }
                      tabIndex={-1}
                    >
                      <ListItem
                        ContainerComponent="li"
                        alignItems="center"
                        aria-selected={false}
                        button={true}
                        className="MuiMenuItem-root-164 MuiMenuItem-gutters-165 suggestion"
                        classes={
                          Object {
                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart-172",
                            "button": "MuiListItem-button-176",
                            "container": "MuiListItem-container-168",
                            "default": "MuiListItem-default-170",
                            "dense": "MuiListItem-dense-171",
                            "disabled": "MuiListItem-disabled-173",
                            "divider": "MuiListItem-divider-174",
                            "focusVisible": "MuiListItem-focusVisible-169",
                            "gutters": "MuiListItem-gutters-175",
                            "root": "MuiListItem-root-167",
                            "secondaryAction": "MuiListItem-secondaryAction-177",
                            "selected": "MuiListItem-selected-178",
                          }
                        }
                        component="li"
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        id="downshift-4-item-0"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                        selected={false}
                        style={
                          Object {
                            "backgroundColor": "white",
                          }
                        }
                        tabIndex={-1}
                      >
                        <MergeListContext
                          alignItems="center"
                          dense={false}
                        >
                          <WithStyles(ButtonBase)
                            aria-selected={false}
                            className="MuiListItem-root-167 MuiListItem-default-170 MuiListItem-gutters-175 MuiListItem-button-176 MuiMenuItem-root-164 MuiMenuItem-gutters-165 suggestion"
                            component="li"
                            disabled={false}
                            focusVisibleClassName="MuiListItem-focusVisible-169"
                            id="downshift-4-item-0"
                            onClick={[Function]}
                            onMouseDown={[Function]}
                            onMouseMove={[Function]}
                            role="option"
                            style={
                              Object {
                                "backgroundColor": "white",
                              }
                            }
                            tabIndex={-1}
                          >
                            <ButtonBase
                              aria-selected={false}
                              centerRipple={false}
                              className="MuiListItem-root-167 MuiListItem-default-170 MuiListItem-gutters-175 MuiListItem-button-176 MuiMenuItem-root-164 MuiMenuItem-gutters-165 suggestion"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-180",
                                  "focusVisible": "MuiButtonBase-focusVisible-181",
                                  "root": "MuiButtonBase-root-179",
                                }
                              }
                              component="li"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={false}
                              focusVisibleClassName="MuiListItem-focusVisible-169"
                              id="downshift-4-item-0"
                              onClick={[Function]}
                              onMouseDown={[Function]}
                              onMouseMove={[Function]}
                              role="option"
                              style={
                                Object {
                                  "backgroundColor": "white",
                                }
                              }
                              tabIndex={-1}
                              type="button"
                            >
                              <li
                                aria-selected={false}
                                className="MuiButtonBase-root-179 MuiListItem-root-167 MuiListItem-default-170 MuiListItem-gutters-175 MuiListItem-button-176 MuiMenuItem-root-164 MuiMenuItem-gutters-165 suggestion"
                                id="downshift-4-item-0"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onContextMenu={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseMove={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                tabIndex={-1}
                              >
                                <DefaultSuggestion
                                  inputValue="some text"
                                  isHighlighted={false}
                                  isSelected={false}
                                  item="some suggestion"
                                  itemId="some suggestion"
                                  key=".0"
                                >
                                  some suggestion
                                </DefaultSuggestion>
                                <NoSsr
                                  defer={false}
                                  fallback={null}
                                >
                                  <WithStyles(TouchRipple)
                                    center={false}
                                    innerRef={[Function]}
                                  >
                                    <TouchRipple
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child-186",
                                          "childLeaving": "MuiTouchRipple-childLeaving-187",
                                          "childPulsate": "MuiTouchRipple-childPulsate-188",
                                          "ripple": "MuiTouchRipple-ripple-183",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-185",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible-184",
                                          "root": "MuiTouchRipple-root-182",
                                        }
                                      }
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        className="MuiTouchRipple-root-182"
                                        component="span"
                                        enter={true}
                                        exit={true}
                                      >
                                        <span
                                          className="MuiTouchRipple-root-182"
                                        />
                                      </TransitionGroup>
                                    </TouchRipple>
                                  </WithStyles(TouchRipple)>
                                </NoSsr>
                              </li>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </MergeListContext>
                      </ListItem>
                    </WithStyles(ListItem)>
                  </MenuItem>
                </WithStyles(MenuItem)>
              </PickerSuggestions>
            </div>
          </Paper>
        </WithStyles(Paper)>
      </PickerDropdown>
    </div>
  </Downshift>
</MultiPicker>
`;

exports[`Preview Picker renders empty content 1`] = `
<MultiPicker
  itemToString={[Function]}
  onChange={[Function]}
  value={Array []}
>
  <Downshift
    defaultHighlightedIndex={null}
    defaultIsOpen={false}
    environment={[Window]}
    fullWidth={true}
    getA11yStatusMessage={[Function]}
    inputValue=""
    itemToString={[Function]}
    onChange={[Function]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <div
      aria-expanded={false}
      aria-haspopup="listbox"
      aria-labelledby="downshift-0-label"
      aria-owns={null}
      role="combobox"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <WithStyles(PickerInput)
        aria-activedescendant={null}
        aria-autocomplete="list"
        aria-controls={null}
        aria-labelledby="downshift-0-label"
        autoComplete="off"
        id="downshift-0-input"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        startAdornment={Array []}
        value=""
      >
        <PickerInput
          aria-activedescendant={null}
          aria-autocomplete="list"
          aria-controls={null}
          aria-labelledby="downshift-0-label"
          autoComplete="off"
          classes={
            Object {
              "InputRoot": "PickerInput-InputRoot-1",
              "inputRoot": "PickerInput-inputRoot-2",
            }
          }
          fullWidth={false}
          id="downshift-0-input"
          label=""
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          startAdornment={Array []}
          value=""
        >
          <TextField
            InputLabelProps={
              Object {
                "shrink": false,
              }
            }
            InputProps={
              Object {
                "classes": Object {
                  "root": "PickerInput-InputRoot-1",
                },
                "inputProps": Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": null,
                  "aria-labelledby": "downshift-0-label",
                  "autoComplete": "off",
                  "id": "downshift-0-input",
                  "onBlur": [Function],
                  "onKeyDown": [Function],
                  "style": Object {
                    "flex": "1 1 auto",
                    "minWidth": "200px",
                    "width": "auto",
                  },
                },
                "startAdornment": false,
              }
            }
            fullWidth={false}
            label=""
            onChange={[Function]}
            required={false}
            select={false}
            value=""
            variant="standard"
          >
            <WithStyles(FormControl)
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <FormControl
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth-6",
                    "marginDense": "MuiFormControl-marginDense-5",
                    "marginNormal": "MuiFormControl-marginNormal-4",
                    "root": "MuiFormControl-root-3",
                  }
                }
                component="div"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="none"
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root-3"
                >
                  <WithStyles(Input)
                    classes={
                      Object {
                        "root": "PickerInput-InputRoot-1",
                      }
                    }
                    fullWidth={false}
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": null,
                        "aria-labelledby": "downshift-0-label",
                        "autoComplete": "off",
                        "id": "downshift-0-input",
                        "onBlur": [Function],
                        "onKeyDown": [Function],
                        "style": Object {
                          "flex": "1 1 auto",
                          "minWidth": "200px",
                          "width": "auto",
                        },
                      }
                    }
                    onChange={[Function]}
                    startAdornment={false}
                    value=""
                  >
                    <Input
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-10",
                          "error": "MuiInput-error-12",
                          "focused": "MuiInput-focused-9",
                          "formControl": "MuiInput-formControl-8",
                          "fullWidth": "MuiInput-fullWidth-14",
                          "input": "MuiInput-input-15",
                          "inputMarginDense": "MuiInput-inputMarginDense-16",
                          "inputMultiline": "MuiInput-inputMultiline-17",
                          "inputType": "MuiInput-inputType-18",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                          "multiline": "MuiInput-multiline-13",
                          "root": "MuiInput-root-7 PickerInput-InputRoot-1",
                          "underline": "MuiInput-underline-11",
                        }
                      }
                      fullWidth={false}
                      inputProps={
                        Object {
                          "aria-activedescendant": null,
                          "aria-autocomplete": "list",
                          "aria-controls": null,
                          "aria-labelledby": "downshift-0-label",
                          "autoComplete": "off",
                          "id": "downshift-0-input",
                          "onBlur": [Function],
                          "onKeyDown": [Function],
                          "style": Object {
                            "flex": "1 1 auto",
                            "minWidth": "200px",
                            "width": "auto",
                          },
                        }
                      }
                      onChange={[Function]}
                      startAdornment={false}
                      value=""
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-10",
                            "error": "MuiInput-error-12",
                            "focused": "MuiInput-focused-9",
                            "formControl": "MuiInput-formControl-8",
                            "fullWidth": "MuiInput-fullWidth-14",
                            "input": "MuiInput-input-15",
                            "inputMarginDense": "MuiInput-inputMarginDense-16",
                            "inputMultiline": "MuiInput-inputMultiline-17",
                            "inputType": "MuiInput-inputType-18",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                            "multiline": "MuiInput-multiline-13",
                            "root": "MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": null,
                            "aria-labelledby": "downshift-0-label",
                            "autoComplete": "off",
                            "id": "downshift-0-input",
                            "onBlur": [Function],
                            "onKeyDown": [Function],
                            "style": Object {
                              "flex": "1 1 auto",
                              "minWidth": "200px",
                              "width": "auto",
                            },
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        startAdornment={false}
                        type="text"
                        value=""
                      >
                        <WithFormControlContext(InputBase)
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-25",
                              "adornedStart": "MuiInputBase-adornedStart-24",
                              "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                              "error": "MuiInputBase-error-26 MuiInput-error-12",
                              "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                              "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                              "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                              "input": "MuiInputBase-input-30 MuiInput-input-15",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                              "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                              "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                              "marginDense": "MuiInputBase-marginDense-27",
                              "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                              "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            }
                          }
                          fullWidth={false}
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": null,
                              "aria-labelledby": "downshift-0-label",
                              "autoComplete": "off",
                              "id": "downshift-0-input",
                              "onBlur": [Function],
                              "onKeyDown": [Function],
                              "style": Object {
                                "flex": "1 1 auto",
                                "minWidth": "200px",
                                "width": "auto",
                              },
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          startAdornment={false}
                          type="text"
                          value=""
                        >
                          <InputBase
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-25",
                                "adornedStart": "MuiInputBase-adornedStart-24",
                                "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                                "error": "MuiInputBase-error-26 MuiInput-error-12",
                                "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                                "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                                "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                                "input": "MuiInputBase-input-30 MuiInput-input-15",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                                "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                                "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                                "marginDense": "MuiInputBase-marginDense-27",
                                "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                                "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "aria-labelledby": "downshift-0-label",
                                "autoComplete": "off",
                                "id": "downshift-0-input",
                                "onBlur": [Function],
                                "onKeyDown": [Function],
                                "style": Object {
                                  "flex": "1 1 auto",
                                  "minWidth": "200px",
                                  "width": "auto",
                                },
                              }
                            }
                            muiFormControl={
                              Object {
                                "adornedStart": false,
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "margin": "none",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": false,
                                "variant": "standard",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            startAdornment={false}
                            type="text"
                            value=""
                          >
                            <div
                              className="MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11 MuiInputBase-formControl-21 MuiInput-formControl-8"
                              onClick={[Function]}
                            >
                              <input
                                aria-activedescendant={null}
                                aria-autocomplete="list"
                                aria-controls={null}
                                aria-invalid={false}
                                aria-labelledby="downshift-0-label"
                                autoComplete="off"
                                className="MuiInputBase-input-30 MuiInput-input-15"
                                disabled={false}
                                id="downshift-0-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                required={false}
                                style={
                                  Object {
                                    "flex": "1 1 auto",
                                    "minWidth": "200px",
                                    "width": "auto",
                                  }
                                }
                                type="text"
                                value=""
                              />
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </div>
              </FormControl>
            </WithStyles(FormControl)>
          </TextField>
        </PickerInput>
      </WithStyles(PickerInput)>
      <PickerDropdown
        clearItems={[Function]}
        clearSelection={[Function]}
        closeMenu={[Function]}
        getItemProps={[Function]}
        getLabelProps={[Function]}
        getMenuProps={[Function]}
        getRootProps={[Function]}
        getToggleButtonProps={[Function]}
        highlightedIndex={null}
        id="downshift-0"
        inputValue=""
        isOpen={false}
        itemToString={[Function]}
        openMenu={[Function]}
        reset={[Function]}
        selectHighlightedItem={[Function]}
        selectItem={[Function]}
        selectItemAtIndex={[Function]}
        selectedItem={null}
        selectedItems={Array []}
        setHighlightedIndex={[Function]}
        setItemCount={[Function]}
        setState={[Function]}
        toggleMenu={[Function]}
        unsetItemCount={[Function]}
      />
    </div>
  </Downshift>
</MultiPicker>
`;

exports[`Preview Picker renders single chip 1`] = `
<MultiPicker
  itemToString={[Function]}
  onChange={[Function]}
  value={
    Array [
      "some item",
    ]
  }
>
  <Downshift
    defaultHighlightedIndex={null}
    defaultIsOpen={false}
    environment={[Window]}
    fullWidth={true}
    getA11yStatusMessage={[Function]}
    inputValue=""
    itemToString={[Function]}
    onChange={[Function]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <div
      aria-expanded={false}
      aria-haspopup="listbox"
      aria-labelledby="downshift-1-label"
      aria-owns={null}
      role="combobox"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <WithStyles(PickerInput)
        aria-activedescendant={null}
        aria-autocomplete="list"
        aria-controls={null}
        aria-labelledby="downshift-1-label"
        autoComplete="off"
        id="downshift-1-input"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        startAdornment={
          Array [
            <WithStyles(PickerChip)
              item="some item"
              label="some item"
              onDelete={[Function]}
            />,
          ]
        }
        value=""
      >
        <PickerInput
          aria-activedescendant={null}
          aria-autocomplete="list"
          aria-controls={null}
          aria-labelledby="downshift-1-label"
          autoComplete="off"
          classes={
            Object {
              "InputRoot": "PickerInput-InputRoot-1",
              "inputRoot": "PickerInput-inputRoot-2",
            }
          }
          fullWidth={false}
          id="downshift-1-input"
          label=""
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          startAdornment={
            Array [
              <WithStyles(PickerChip)
                item="some item"
                label="some item"
                onDelete={[Function]}
              />,
            ]
          }
          value=""
        >
          <TextField
            InputLabelProps={
              Object {
                "shrink": true,
              }
            }
            InputProps={
              Object {
                "classes": Object {
                  "root": "PickerInput-InputRoot-1",
                },
                "inputProps": Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": null,
                  "aria-labelledby": "downshift-1-label",
                  "autoComplete": "off",
                  "id": "downshift-1-input",
                  "onBlur": [Function],
                  "onKeyDown": [Function],
                  "style": Object {
                    "flex": "1 1 auto",
                    "minWidth": "200px",
                    "width": "auto",
                  },
                },
                "startAdornment": Array [
                  <WithStyles(PickerChip)
                    item="some item"
                    label="some item"
                    onDelete={[Function]}
                  />,
                ],
              }
            }
            fullWidth={false}
            label=""
            onChange={[Function]}
            required={false}
            select={false}
            value=""
            variant="standard"
          >
            <WithStyles(FormControl)
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <FormControl
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth-6",
                    "marginDense": "MuiFormControl-marginDense-5",
                    "marginNormal": "MuiFormControl-marginNormal-4",
                    "root": "MuiFormControl-root-3",
                  }
                }
                component="div"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="none"
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root-3"
                >
                  <WithStyles(Input)
                    classes={
                      Object {
                        "root": "PickerInput-InputRoot-1",
                      }
                    }
                    fullWidth={false}
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": null,
                        "aria-labelledby": "downshift-1-label",
                        "autoComplete": "off",
                        "id": "downshift-1-input",
                        "onBlur": [Function],
                        "onKeyDown": [Function],
                        "style": Object {
                          "flex": "1 1 auto",
                          "minWidth": "200px",
                          "width": "auto",
                        },
                      }
                    }
                    onChange={[Function]}
                    startAdornment={
                      Array [
                        <WithStyles(PickerChip)
                          item="some item"
                          label="some item"
                          onDelete={[Function]}
                        />,
                      ]
                    }
                    value=""
                  >
                    <Input
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-10",
                          "error": "MuiInput-error-12",
                          "focused": "MuiInput-focused-9",
                          "formControl": "MuiInput-formControl-8",
                          "fullWidth": "MuiInput-fullWidth-14",
                          "input": "MuiInput-input-15",
                          "inputMarginDense": "MuiInput-inputMarginDense-16",
                          "inputMultiline": "MuiInput-inputMultiline-17",
                          "inputType": "MuiInput-inputType-18",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                          "multiline": "MuiInput-multiline-13",
                          "root": "MuiInput-root-7 PickerInput-InputRoot-1",
                          "underline": "MuiInput-underline-11",
                        }
                      }
                      fullWidth={false}
                      inputProps={
                        Object {
                          "aria-activedescendant": null,
                          "aria-autocomplete": "list",
                          "aria-controls": null,
                          "aria-labelledby": "downshift-1-label",
                          "autoComplete": "off",
                          "id": "downshift-1-input",
                          "onBlur": [Function],
                          "onKeyDown": [Function],
                          "style": Object {
                            "flex": "1 1 auto",
                            "minWidth": "200px",
                            "width": "auto",
                          },
                        }
                      }
                      onChange={[Function]}
                      startAdornment={
                        Array [
                          <WithStyles(PickerChip)
                            item="some item"
                            label="some item"
                            onDelete={[Function]}
                          />,
                        ]
                      }
                      value=""
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-10",
                            "error": "MuiInput-error-12",
                            "focused": "MuiInput-focused-9",
                            "formControl": "MuiInput-formControl-8",
                            "fullWidth": "MuiInput-fullWidth-14",
                            "input": "MuiInput-input-15",
                            "inputMarginDense": "MuiInput-inputMarginDense-16",
                            "inputMultiline": "MuiInput-inputMultiline-17",
                            "inputType": "MuiInput-inputType-18",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                            "multiline": "MuiInput-multiline-13",
                            "root": "MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": null,
                            "aria-labelledby": "downshift-1-label",
                            "autoComplete": "off",
                            "id": "downshift-1-input",
                            "onBlur": [Function],
                            "onKeyDown": [Function],
                            "style": Object {
                              "flex": "1 1 auto",
                              "minWidth": "200px",
                              "width": "auto",
                            },
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        startAdornment={
                          Array [
                            <WithStyles(PickerChip)
                              item="some item"
                              label="some item"
                              onDelete={[Function]}
                            />,
                          ]
                        }
                        type="text"
                        value=""
                      >
                        <WithFormControlContext(InputBase)
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-25",
                              "adornedStart": "MuiInputBase-adornedStart-24",
                              "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                              "error": "MuiInputBase-error-26 MuiInput-error-12",
                              "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                              "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                              "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                              "input": "MuiInputBase-input-30 MuiInput-input-15",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                              "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                              "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                              "marginDense": "MuiInputBase-marginDense-27",
                              "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                              "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            }
                          }
                          fullWidth={false}
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": null,
                              "aria-labelledby": "downshift-1-label",
                              "autoComplete": "off",
                              "id": "downshift-1-input",
                              "onBlur": [Function],
                              "onKeyDown": [Function],
                              "style": Object {
                                "flex": "1 1 auto",
                                "minWidth": "200px",
                                "width": "auto",
                              },
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          startAdornment={
                            Array [
                              <WithStyles(PickerChip)
                                item="some item"
                                label="some item"
                                onDelete={[Function]}
                              />,
                            ]
                          }
                          type="text"
                          value=""
                        >
                          <InputBase
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-25",
                                "adornedStart": "MuiInputBase-adornedStart-24",
                                "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                                "error": "MuiInputBase-error-26 MuiInput-error-12",
                                "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                                "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                                "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                                "input": "MuiInputBase-input-30 MuiInput-input-15",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                                "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                                "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                                "marginDense": "MuiInputBase-marginDense-27",
                                "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                                "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "aria-labelledby": "downshift-1-label",
                                "autoComplete": "off",
                                "id": "downshift-1-input",
                                "onBlur": [Function],
                                "onKeyDown": [Function],
                                "style": Object {
                                  "flex": "1 1 auto",
                                  "minWidth": "200px",
                                  "width": "auto",
                                },
                              }
                            }
                            muiFormControl={
                              Object {
                                "adornedStart": true,
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "margin": "none",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": false,
                                "variant": "standard",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            startAdornment={
                              Array [
                                <WithStyles(PickerChip)
                                  item="some item"
                                  label="some item"
                                  onDelete={[Function]}
                                />,
                              ]
                            }
                            type="text"
                            value=""
                          >
                            <div
                              className="MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11 MuiInputBase-formControl-21 MuiInput-formControl-8 MuiInputBase-adornedStart-24"
                              onClick={[Function]}
                            >
                              <WithStyles(PickerChip)
                                item="some item"
                                key="some item"
                                label="some item"
                                onDelete={[Function]}
                              >
                                <PickerChip
                                  classes={
                                    Object {
                                      "root": "PickerChip-root-37",
                                    }
                                  }
                                  item="some item"
                                  label="some item"
                                  onDelete={[Function]}
                                >
                                  <WithStyles(Tooltip)
                                    title="Click to show preview"
                                  >
                                    <Tooltip
                                      TransitionComponent={[Function]}
                                      classes={
                                        Object {
                                          "popper": "MuiTooltip-popper-38",
                                          "popperInteractive": "MuiTooltip-popperInteractive-39",
                                          "tooltip": "MuiTooltip-tooltip-40",
                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom-45",
                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft-42",
                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight-43",
                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop-44",
                                          "touch": "MuiTooltip-touch-41",
                                        }
                                      }
                                      disableFocusListener={false}
                                      disableHoverListener={false}
                                      disableTouchListener={false}
                                      enterDelay={0}
                                      enterTouchDelay={1000}
                                      interactive={false}
                                      leaveDelay={0}
                                      leaveTouchDelay={1500}
                                      placement="bottom"
                                      theme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "hover": "rgba(0, 0, 0, 0.08)",
                                              "hoverOpacity": 0.08,
                                              "selected": "rgba(0, 0, 0, 0.14)",
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                            "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                            "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": Object {
                                            "unit": 8,
                                          },
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.46429em",
                                            },
                                            "body1Next": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "lineHeight": "1.71429em",
                                            },
                                            "body2Next": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.5,
                                            },
                                            "button": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "textTransform": "uppercase",
                                            },
                                            "buttonNext": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.375em",
                                            },
                                            "captionNext": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "display1": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.20588em",
                                            },
                                            "display2": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.8125rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.13333em",
                                              "marginLeft": "-.02em",
                                            },
                                            "display3": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "-.02em",
                                              "lineHeight": "1.30357em",
                                              "marginLeft": "-.02em",
                                            },
                                            "display4": Object {
                                              "color": "rgba(0, 0, 0, 0.54)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "7rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-.04em",
                                              "lineHeight": "1.14286em",
                                              "marginLeft": "-.04em",
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1,
                                            },
                                            "h2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1,
                                            },
                                            "h3": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.04,
                                            },
                                            "h4": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.17,
                                            },
                                            "h5": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.33,
                                            },
                                            "h6": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "headline": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.35417em",
                                            },
                                            "overline": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subheading": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "lineHeight": "1.5em",
                                            },
                                            "subtitle1": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                            "title": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.3125rem",
                                              "fontWeight": 500,
                                              "lineHeight": "1.16667em",
                                            },
                                            "useNextVariants": false,
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      title="Click to show preview"
                                    >
                                      <RootRef
                                        rootRef={[Function]}
                                      >
                                        <WithStyles(Chip)
                                          aria-describedby={null}
                                          className="PickerChip-root-37"
                                          label="some item"
                                          onBlur={[Function]}
                                          onDelete={[Function]}
                                          onFocus={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={-1}
                                          title="Click to show preview"
                                        >
                                          <Chip
                                            aria-describedby={null}
                                            className="PickerChip-root-37"
                                            classes={
                                              Object {
                                                "avatar": "MuiChip-avatar-58",
                                                "avatarChildren": "MuiChip-avatarChildren-61",
                                                "avatarColorPrimary": "MuiChip-avatarColorPrimary-59",
                                                "avatarColorSecondary": "MuiChip-avatarColorSecondary-60",
                                                "clickable": "MuiChip-clickable-49",
                                                "clickableColorPrimary": "MuiChip-clickableColorPrimary-50",
                                                "clickableColorSecondary": "MuiChip-clickableColorSecondary-51",
                                                "colorPrimary": "MuiChip-colorPrimary-47",
                                                "colorSecondary": "MuiChip-colorSecondary-48",
                                                "deletable": "MuiChip-deletable-52",
                                                "deletableColorPrimary": "MuiChip-deletableColorPrimary-53",
                                                "deletableColorSecondary": "MuiChip-deletableColorSecondary-54",
                                                "deleteIcon": "MuiChip-deleteIcon-66",
                                                "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary-67",
                                                "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary-68",
                                                "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary-69",
                                                "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary-70",
                                                "icon": "MuiChip-icon-62",
                                                "iconColorPrimary": "MuiChip-iconColorPrimary-63",
                                                "iconColorSecondary": "MuiChip-iconColorSecondary-64",
                                                "label": "MuiChip-label-65",
                                                "outlined": "MuiChip-outlined-55",
                                                "outlinedPrimary": "MuiChip-outlinedPrimary-56",
                                                "outlinedSecondary": "MuiChip-outlinedSecondary-57",
                                                "root": "MuiChip-root-46",
                                              }
                                            }
                                            color="default"
                                            component="div"
                                            label="some item"
                                            onBlur={[Function]}
                                            onDelete={[Function]}
                                            onFocus={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Click to show preview"
                                            variant="default"
                                          >
                                            <div
                                              aria-describedby={null}
                                              className="MuiChip-root-46 MuiChip-deletable-52 PickerChip-root-37"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseOver={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={-1}
                                              title="Click to show preview"
                                            >
                                              <span
                                                className="MuiChip-label-65"
                                              >
                                                some item
                                              </span>
                                              <pure(Cancel)
                                                className="MuiChip-deleteIcon-66"
                                                onClick={[Function]}
                                              >
                                                <Cancel
                                                  className="MuiChip-deleteIcon-66"
                                                  onClick={[Function]}
                                                >
                                                  <WithStyles(SvgIcon)
                                                    className="MuiChip-deleteIcon-66"
                                                    onClick={[Function]}
                                                  >
                                                    <SvgIcon
                                                      className="MuiChip-deleteIcon-66"
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction-74",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled-76",
                                                          "colorError": "MuiSvgIcon-colorError-75",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary-72",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary-73",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-77",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-79",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-78",
                                                          "root": "MuiSvgIcon-root-71",
                                                        }
                                                      }
                                                      color="inherit"
                                                      component="svg"
                                                      fontSize="default"
                                                      onClick={[Function]}
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="MuiSvgIcon-root-71 MuiChip-deleteIcon-66"
                                                        focusable="false"
                                                        onClick={[Function]}
                                                        role="presentation"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                        />
                                                      </svg>
                                                    </SvgIcon>
                                                  </WithStyles(SvgIcon)>
                                                </Cancel>
                                              </pure(Cancel)>
                                            </div>
                                          </Chip>
                                        </WithStyles(Chip)>
                                      </RootRef>
                                      <Popper
                                        className="MuiTooltip-popper-38"
                                        disablePortal={false}
                                        id={null}
                                        open={false}
                                        placement="bottom"
                                        transition={true}
                                      />
                                    </Tooltip>
                                  </WithStyles(Tooltip)>
                                </PickerChip>
                              </WithStyles(PickerChip)>
                              <input
                                aria-activedescendant={null}
                                aria-autocomplete="list"
                                aria-controls={null}
                                aria-invalid={false}
                                aria-labelledby="downshift-1-label"
                                autoComplete="off"
                                className="MuiInputBase-input-30 MuiInput-input-15 MuiInputBase-inputAdornedStart-35"
                                disabled={false}
                                id="downshift-1-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                required={false}
                                style={
                                  Object {
                                    "flex": "1 1 auto",
                                    "minWidth": "200px",
                                    "width": "auto",
                                  }
                                }
                                type="text"
                                value=""
                              />
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </div>
              </FormControl>
            </WithStyles(FormControl)>
          </TextField>
        </PickerInput>
      </WithStyles(PickerInput)>
      <PickerDropdown
        clearItems={[Function]}
        clearSelection={[Function]}
        closeMenu={[Function]}
        getItemProps={[Function]}
        getLabelProps={[Function]}
        getMenuProps={[Function]}
        getRootProps={[Function]}
        getToggleButtonProps={[Function]}
        highlightedIndex={null}
        id="downshift-1"
        inputValue=""
        isOpen={false}
        itemToString={[Function]}
        openMenu={[Function]}
        reset={[Function]}
        selectHighlightedItem={[Function]}
        selectItem={[Function]}
        selectItemAtIndex={[Function]}
        selectedItem={null}
        selectedItems={
          Array [
            "some item",
          ]
        }
        setHighlightedIndex={[Function]}
        setItemCount={[Function]}
        setState={[Function]}
        toggleMenu={[Function]}
        unsetItemCount={[Function]}
      />
    </div>
  </Downshift>
</MultiPicker>
`;

exports[`Preview Picker shows a loading message if the suggestions are being loaded 1`] = `
<MultiPicker
  getSuggestedItems={[Function]}
  itemToString={[Function]}
  onChange={[Function]}
  value={Array []}
>
  <Downshift
    defaultHighlightedIndex={null}
    defaultIsOpen={false}
    environment={[Window]}
    fullWidth={true}
    getA11yStatusMessage={[Function]}
    inputValue="some text"
    itemToString={[Function]}
    onChange={[Function]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <div
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-11-label"
      aria-owns="downshift-11-menu"
      role="combobox"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <WithStyles(PickerInput)
        aria-activedescendant={null}
        aria-autocomplete="list"
        aria-controls="downshift-11-menu"
        aria-labelledby="downshift-11-label"
        autoComplete="off"
        id="downshift-11-input"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        startAdornment={Array []}
        value="some text"
      >
        <PickerInput
          aria-activedescendant={null}
          aria-autocomplete="list"
          aria-controls="downshift-11-menu"
          aria-labelledby="downshift-11-label"
          autoComplete="off"
          classes={
            Object {
              "InputRoot": "PickerInput-InputRoot-1",
              "inputRoot": "PickerInput-inputRoot-2",
            }
          }
          fullWidth={false}
          id="downshift-11-input"
          label=""
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          startAdornment={Array []}
          value="some text"
        >
          <TextField
            InputLabelProps={
              Object {
                "shrink": true,
              }
            }
            InputProps={
              Object {
                "classes": Object {
                  "root": "PickerInput-InputRoot-1",
                },
                "inputProps": Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": "downshift-11-menu",
                  "aria-labelledby": "downshift-11-label",
                  "autoComplete": "off",
                  "id": "downshift-11-input",
                  "onBlur": [Function],
                  "onKeyDown": [Function],
                  "style": Object {
                    "flex": "1 1 auto",
                    "minWidth": "200px",
                    "width": "auto",
                  },
                },
                "startAdornment": false,
              }
            }
            fullWidth={false}
            label=""
            onChange={[Function]}
            required={false}
            select={false}
            value="some text"
            variant="standard"
          >
            <WithStyles(FormControl)
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <FormControl
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth-6",
                    "marginDense": "MuiFormControl-marginDense-5",
                    "marginNormal": "MuiFormControl-marginNormal-4",
                    "root": "MuiFormControl-root-3",
                  }
                }
                component="div"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="none"
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root-3"
                >
                  <WithStyles(Input)
                    classes={
                      Object {
                        "root": "PickerInput-InputRoot-1",
                      }
                    }
                    fullWidth={false}
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": "downshift-11-menu",
                        "aria-labelledby": "downshift-11-label",
                        "autoComplete": "off",
                        "id": "downshift-11-input",
                        "onBlur": [Function],
                        "onKeyDown": [Function],
                        "style": Object {
                          "flex": "1 1 auto",
                          "minWidth": "200px",
                          "width": "auto",
                        },
                      }
                    }
                    onChange={[Function]}
                    startAdornment={false}
                    value="some text"
                  >
                    <Input
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-10",
                          "error": "MuiInput-error-12",
                          "focused": "MuiInput-focused-9",
                          "formControl": "MuiInput-formControl-8",
                          "fullWidth": "MuiInput-fullWidth-14",
                          "input": "MuiInput-input-15",
                          "inputMarginDense": "MuiInput-inputMarginDense-16",
                          "inputMultiline": "MuiInput-inputMultiline-17",
                          "inputType": "MuiInput-inputType-18",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                          "multiline": "MuiInput-multiline-13",
                          "root": "MuiInput-root-7 PickerInput-InputRoot-1",
                          "underline": "MuiInput-underline-11",
                        }
                      }
                      fullWidth={false}
                      inputProps={
                        Object {
                          "aria-activedescendant": null,
                          "aria-autocomplete": "list",
                          "aria-controls": "downshift-11-menu",
                          "aria-labelledby": "downshift-11-label",
                          "autoComplete": "off",
                          "id": "downshift-11-input",
                          "onBlur": [Function],
                          "onKeyDown": [Function],
                          "style": Object {
                            "flex": "1 1 auto",
                            "minWidth": "200px",
                            "width": "auto",
                          },
                        }
                      }
                      onChange={[Function]}
                      startAdornment={false}
                      value="some text"
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-10",
                            "error": "MuiInput-error-12",
                            "focused": "MuiInput-focused-9",
                            "formControl": "MuiInput-formControl-8",
                            "fullWidth": "MuiInput-fullWidth-14",
                            "input": "MuiInput-input-15",
                            "inputMarginDense": "MuiInput-inputMarginDense-16",
                            "inputMultiline": "MuiInput-inputMultiline-17",
                            "inputType": "MuiInput-inputType-18",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                            "multiline": "MuiInput-multiline-13",
                            "root": "MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": "downshift-11-menu",
                            "aria-labelledby": "downshift-11-label",
                            "autoComplete": "off",
                            "id": "downshift-11-input",
                            "onBlur": [Function],
                            "onKeyDown": [Function],
                            "style": Object {
                              "flex": "1 1 auto",
                              "minWidth": "200px",
                              "width": "auto",
                            },
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        startAdornment={false}
                        type="text"
                        value="some text"
                      >
                        <WithFormControlContext(InputBase)
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-25",
                              "adornedStart": "MuiInputBase-adornedStart-24",
                              "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                              "error": "MuiInputBase-error-26 MuiInput-error-12",
                              "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                              "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                              "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                              "input": "MuiInputBase-input-30 MuiInput-input-15",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                              "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                              "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                              "marginDense": "MuiInputBase-marginDense-27",
                              "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                              "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            }
                          }
                          fullWidth={false}
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": "downshift-11-menu",
                              "aria-labelledby": "downshift-11-label",
                              "autoComplete": "off",
                              "id": "downshift-11-input",
                              "onBlur": [Function],
                              "onKeyDown": [Function],
                              "style": Object {
                                "flex": "1 1 auto",
                                "minWidth": "200px",
                                "width": "auto",
                              },
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          startAdornment={false}
                          type="text"
                          value="some text"
                        >
                          <InputBase
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-25",
                                "adornedStart": "MuiInputBase-adornedStart-24",
                                "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                                "error": "MuiInputBase-error-26 MuiInput-error-12",
                                "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                                "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                                "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                                "input": "MuiInputBase-input-30 MuiInput-input-15",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                                "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                                "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                                "marginDense": "MuiInputBase-marginDense-27",
                                "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                                "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": "downshift-11-menu",
                                "aria-labelledby": "downshift-11-label",
                                "autoComplete": "off",
                                "id": "downshift-11-input",
                                "onBlur": [Function],
                                "onKeyDown": [Function],
                                "style": Object {
                                  "flex": "1 1 auto",
                                  "minWidth": "200px",
                                  "width": "auto",
                                },
                              }
                            }
                            muiFormControl={
                              Object {
                                "adornedStart": false,
                                "disabled": false,
                                "error": false,
                                "filled": true,
                                "focused": false,
                                "margin": "none",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": false,
                                "variant": "standard",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            startAdornment={false}
                            type="text"
                            value="some text"
                          >
                            <div
                              className="MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11 MuiInputBase-formControl-21 MuiInput-formControl-8"
                              onClick={[Function]}
                            >
                              <input
                                aria-activedescendant={null}
                                aria-autocomplete="list"
                                aria-controls="downshift-11-menu"
                                aria-invalid={false}
                                aria-labelledby="downshift-11-label"
                                autoComplete="off"
                                className="MuiInputBase-input-30 MuiInput-input-15"
                                disabled={false}
                                id="downshift-11-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                required={false}
                                style={
                                  Object {
                                    "flex": "1 1 auto",
                                    "minWidth": "200px",
                                    "width": "auto",
                                  }
                                }
                                type="text"
                                value="some text"
                              />
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </div>
              </FormControl>
            </WithStyles(FormControl)>
          </TextField>
        </PickerInput>
      </WithStyles(PickerInput)>
      <PickerDropdown
        clearItems={[Function]}
        clearSelection={[Function]}
        closeMenu={[Function]}
        getItemProps={[Function]}
        getLabelProps={[Function]}
        getMenuProps={[Function]}
        getRootProps={[Function]}
        getToggleButtonProps={[Function]}
        highlightedIndex={null}
        id="downshift-11"
        inputValue="some text"
        isOpen={true}
        itemToString={[Function]}
        openMenu={[Function]}
        reset={[Function]}
        selectHighlightedItem={[Function]}
        selectItem={[Function]}
        selectItemAtIndex={[Function]}
        selectedItem={null}
        selectedItems={Array []}
        setHighlightedIndex={[Function]}
        setItemCount={[Function]}
        setState={[Function]}
        suggestions={Symbol(loading)}
        toggleMenu={[Function]}
        unsetItemCount={[Function]}
      >
        <WithStyles(Paper)
          square={true}
          style={
            Object {
              "position": "absolute",
              "width": "100%",
              "zIndex": 100,
            }
          }
        >
          <Paper
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0-85",
                "elevation1": "MuiPaper-elevation1-86",
                "elevation10": "MuiPaper-elevation10-95",
                "elevation11": "MuiPaper-elevation11-96",
                "elevation12": "MuiPaper-elevation12-97",
                "elevation13": "MuiPaper-elevation13-98",
                "elevation14": "MuiPaper-elevation14-99",
                "elevation15": "MuiPaper-elevation15-100",
                "elevation16": "MuiPaper-elevation16-101",
                "elevation17": "MuiPaper-elevation17-102",
                "elevation18": "MuiPaper-elevation18-103",
                "elevation19": "MuiPaper-elevation19-104",
                "elevation2": "MuiPaper-elevation2-87",
                "elevation20": "MuiPaper-elevation20-105",
                "elevation21": "MuiPaper-elevation21-106",
                "elevation22": "MuiPaper-elevation22-107",
                "elevation23": "MuiPaper-elevation23-108",
                "elevation24": "MuiPaper-elevation24-109",
                "elevation3": "MuiPaper-elevation3-88",
                "elevation4": "MuiPaper-elevation4-89",
                "elevation5": "MuiPaper-elevation5-90",
                "elevation6": "MuiPaper-elevation6-91",
                "elevation7": "MuiPaper-elevation7-92",
                "elevation8": "MuiPaper-elevation8-93",
                "elevation9": "MuiPaper-elevation9-94",
                "root": "MuiPaper-root-83",
                "rounded": "MuiPaper-rounded-84",
              }
            }
            component="div"
            elevation={2}
            square={true}
            style={
              Object {
                "position": "absolute",
                "width": "100%",
                "zIndex": 100,
              }
            }
          >
            <div
              className="MuiPaper-root-83 MuiPaper-elevation2-87"
              style={
                Object {
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": 100,
                }
              }
            >
              <PickerSuggestions
                clearItems={[Function]}
                clearSelection={[Function]}
                closeMenu={[Function]}
                getItemProps={[Function]}
                getLabelProps={[Function]}
                getMenuProps={[Function]}
                getRootProps={[Function]}
                getToggleButtonProps={[Function]}
                highlightedIndex={null}
                id="downshift-11"
                inputValue="some text"
                itemToString={[Function]}
                openMenu={[Function]}
                reset={[Function]}
                selectHighlightedItem={[Function]}
                selectItem={[Function]}
                selectItemAtIndex={[Function]}
                selectedItem={null}
                selectedItems={Array []}
                setHighlightedIndex={[Function]}
                setItemCount={[Function]}
                setState={[Function]}
                suggestions={Symbol(loading)}
                toggleMenu={[Function]}
                unsetItemCount={[Function]}
              >
                <WithStyles(Typography)
                  align="center"
                  gutterBottom={true}
                  variant="h6"
                >
                  <Typography
                    align="center"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter-374",
                        "alignJustify": "MuiTypography-alignJustify-376",
                        "alignLeft": "MuiTypography-alignLeft-373",
                        "alignRight": "MuiTypography-alignRight-375",
                        "body1": "MuiTypography-body1-360",
                        "body2": "MuiTypography-body2-359",
                        "button": "MuiTypography-button-362",
                        "caption": "MuiTypography-caption-361",
                        "colorError": "MuiTypography-colorError-385",
                        "colorInherit": "MuiTypography-colorInherit-380",
                        "colorPrimary": "MuiTypography-colorPrimary-381",
                        "colorSecondary": "MuiTypography-colorSecondary-382",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary-383",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary-384",
                        "display1": "MuiTypography-display1-355",
                        "display2": "MuiTypography-display2-354",
                        "display3": "MuiTypography-display3-353",
                        "display4": "MuiTypography-display4-352",
                        "gutterBottom": "MuiTypography-gutterBottom-378",
                        "h1": "MuiTypography-h1-363",
                        "h2": "MuiTypography-h2-364",
                        "h3": "MuiTypography-h3-365",
                        "h4": "MuiTypography-h4-366",
                        "h5": "MuiTypography-h5-367",
                        "h6": "MuiTypography-h6-368",
                        "headline": "MuiTypography-headline-356",
                        "inline": "MuiTypography-inline-386",
                        "noWrap": "MuiTypography-noWrap-377",
                        "overline": "MuiTypography-overline-371",
                        "paragraph": "MuiTypography-paragraph-379",
                        "root": "MuiTypography-root-351",
                        "srOnly": "MuiTypography-srOnly-372",
                        "subheading": "MuiTypography-subheading-358",
                        "subtitle1": "MuiTypography-subtitle1-369",
                        "subtitle2": "MuiTypography-subtitle2-370",
                        "title": "MuiTypography-title-357",
                      }
                    }
                    color="default"
                    gutterBottom={true}
                    headlineMapping={
                      Object {
                        "body1": "p",
                        "body2": "p",
                        "display1": "h1",
                        "display2": "h1",
                        "display3": "h1",
                        "display4": "h1",
                        "h1": "h1",
                        "h2": "h2",
                        "h3": "h3",
                        "h4": "h4",
                        "h5": "h5",
                        "h6": "h6",
                        "headline": "h1",
                        "subheading": "h3",
                        "subtitle1": "h6",
                        "subtitle2": "h6",
                        "title": "h2",
                      }
                    }
                    inline={false}
                    noWrap={false}
                    paragraph={false}
                    theme={
                      Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                          "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                          "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "lineHeight": "1.46429em",
                          },
                          "body1Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "lineHeight": "1.71429em",
                          },
                          "body2Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.5,
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "textTransform": "uppercase",
                          },
                          "buttonNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "lineHeight": "1.375em",
                          },
                          "captionNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "display1": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.20588em",
                          },
                          "display2": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.8125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.13333em",
                            "marginLeft": "-.02em",
                          },
                          "display3": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "-.02em",
                            "lineHeight": "1.30357em",
                            "marginLeft": "-.02em",
                          },
                          "display4": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "7rem",
                            "fontWeight": 300,
                            "letterSpacing": "-.04em",
                            "lineHeight": "1.14286em",
                            "marginLeft": "-.04em",
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1,
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1,
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.04,
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.17,
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.33,
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "headline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "lineHeight": "1.35417em",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subheading": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "lineHeight": "1.5em",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                          "title": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.3125rem",
                            "fontWeight": 500,
                            "lineHeight": "1.16667em",
                          },
                          "useNextVariants": false,
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "tooltip": 1500,
                        },
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root-351 MuiTypography-h6-368 MuiTypography-gutterBottom-378 MuiTypography-alignCenter-374"
                    >
                      Loading suggestions…
                    </h6>
                  </Typography>
                </WithStyles(Typography)>
                <WithStyles(LinearProgress)>
                  <LinearProgress
                    classes={
                      Object {
                        "bar": "MuiLinearProgress-bar-397",
                        "bar1Buffer": "MuiLinearProgress-bar1Buffer-402",
                        "bar1Determinate": "MuiLinearProgress-bar1Determinate-401",
                        "bar1Indeterminate": "MuiLinearProgress-bar1Indeterminate-400",
                        "bar2Buffer": "MuiLinearProgress-bar2Buffer-404",
                        "bar2Indeterminate": "MuiLinearProgress-bar2Indeterminate-403",
                        "barColorPrimary": "MuiLinearProgress-barColorPrimary-398",
                        "barColorSecondary": "MuiLinearProgress-barColorSecondary-399",
                        "buffer": "MuiLinearProgress-buffer-392",
                        "colorPrimary": "MuiLinearProgress-colorPrimary-388",
                        "colorSecondary": "MuiLinearProgress-colorSecondary-389",
                        "dashed": "MuiLinearProgress-dashed-394",
                        "dashedColorPrimary": "MuiLinearProgress-dashedColorPrimary-395",
                        "dashedColorSecondary": "MuiLinearProgress-dashedColorSecondary-396",
                        "determinate": "MuiLinearProgress-determinate-390",
                        "indeterminate": "MuiLinearProgress-indeterminate-391",
                        "query": "MuiLinearProgress-query-393",
                        "root": "MuiLinearProgress-root-387",
                      }
                    }
                    color="primary"
                    variant="indeterminate"
                  >
                    <div
                      className="MuiLinearProgress-root-387 MuiLinearProgress-colorPrimary-388 MuiLinearProgress-indeterminate-391"
                      role="progressbar"
                    >
                      <div
                        className="MuiLinearProgress-bar-397 MuiLinearProgress-barColorPrimary-398 MuiLinearProgress-bar1Indeterminate-400"
                        style={Object {}}
                      />
                      <div
                        className="MuiLinearProgress-bar-397 MuiLinearProgress-barColorPrimary-398 MuiLinearProgress-bar2Indeterminate-403"
                        style={Object {}}
                      />
                    </div>
                  </LinearProgress>
                </WithStyles(LinearProgress)>
              </PickerSuggestions>
            </div>
          </Paper>
        </WithStyles(Paper)>
      </PickerDropdown>
    </div>
  </Downshift>
</MultiPicker>
`;

exports[`Preview Picker shows an error message if the getSuggestions function returns a failed promise 1`] = `
<MultiPicker
  getSuggestedItems={[Function]}
  itemToString={[Function]}
  onChange={[Function]}
  value={Array []}
>
  <Downshift
    defaultHighlightedIndex={null}
    defaultIsOpen={false}
    environment={[Window]}
    fullWidth={true}
    getA11yStatusMessage={[Function]}
    inputValue="some text"
    itemToString={[Function]}
    onChange={[Function]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <div
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-13-label"
      aria-owns="downshift-13-menu"
      role="combobox"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <WithStyles(PickerInput)
        aria-activedescendant={null}
        aria-autocomplete="list"
        aria-controls="downshift-13-menu"
        aria-labelledby="downshift-13-label"
        autoComplete="off"
        id="downshift-13-input"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        startAdornment={Array []}
        value="some text"
      >
        <PickerInput
          aria-activedescendant={null}
          aria-autocomplete="list"
          aria-controls="downshift-13-menu"
          aria-labelledby="downshift-13-label"
          autoComplete="off"
          classes={
            Object {
              "InputRoot": "PickerInput-InputRoot-1",
              "inputRoot": "PickerInput-inputRoot-2",
            }
          }
          fullWidth={false}
          id="downshift-13-input"
          label=""
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          startAdornment={Array []}
          value="some text"
        >
          <TextField
            InputLabelProps={
              Object {
                "shrink": true,
              }
            }
            InputProps={
              Object {
                "classes": Object {
                  "root": "PickerInput-InputRoot-1",
                },
                "inputProps": Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": "downshift-13-menu",
                  "aria-labelledby": "downshift-13-label",
                  "autoComplete": "off",
                  "id": "downshift-13-input",
                  "onBlur": [Function],
                  "onKeyDown": [Function],
                  "style": Object {
                    "flex": "1 1 auto",
                    "minWidth": "200px",
                    "width": "auto",
                  },
                },
                "startAdornment": false,
              }
            }
            fullWidth={false}
            label=""
            onChange={[Function]}
            required={false}
            select={false}
            value="some text"
            variant="standard"
          >
            <WithStyles(FormControl)
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <FormControl
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth-6",
                    "marginDense": "MuiFormControl-marginDense-5",
                    "marginNormal": "MuiFormControl-marginNormal-4",
                    "root": "MuiFormControl-root-3",
                  }
                }
                component="div"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="none"
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root-3"
                >
                  <WithStyles(Input)
                    classes={
                      Object {
                        "root": "PickerInput-InputRoot-1",
                      }
                    }
                    fullWidth={false}
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": "downshift-13-menu",
                        "aria-labelledby": "downshift-13-label",
                        "autoComplete": "off",
                        "id": "downshift-13-input",
                        "onBlur": [Function],
                        "onKeyDown": [Function],
                        "style": Object {
                          "flex": "1 1 auto",
                          "minWidth": "200px",
                          "width": "auto",
                        },
                      }
                    }
                    onChange={[Function]}
                    startAdornment={false}
                    value="some text"
                  >
                    <Input
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-10",
                          "error": "MuiInput-error-12",
                          "focused": "MuiInput-focused-9",
                          "formControl": "MuiInput-formControl-8",
                          "fullWidth": "MuiInput-fullWidth-14",
                          "input": "MuiInput-input-15",
                          "inputMarginDense": "MuiInput-inputMarginDense-16",
                          "inputMultiline": "MuiInput-inputMultiline-17",
                          "inputType": "MuiInput-inputType-18",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                          "multiline": "MuiInput-multiline-13",
                          "root": "MuiInput-root-7 PickerInput-InputRoot-1",
                          "underline": "MuiInput-underline-11",
                        }
                      }
                      fullWidth={false}
                      inputProps={
                        Object {
                          "aria-activedescendant": null,
                          "aria-autocomplete": "list",
                          "aria-controls": "downshift-13-menu",
                          "aria-labelledby": "downshift-13-label",
                          "autoComplete": "off",
                          "id": "downshift-13-input",
                          "onBlur": [Function],
                          "onKeyDown": [Function],
                          "style": Object {
                            "flex": "1 1 auto",
                            "minWidth": "200px",
                            "width": "auto",
                          },
                        }
                      }
                      onChange={[Function]}
                      startAdornment={false}
                      value="some text"
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-10",
                            "error": "MuiInput-error-12",
                            "focused": "MuiInput-focused-9",
                            "formControl": "MuiInput-formControl-8",
                            "fullWidth": "MuiInput-fullWidth-14",
                            "input": "MuiInput-input-15",
                            "inputMarginDense": "MuiInput-inputMarginDense-16",
                            "inputMultiline": "MuiInput-inputMultiline-17",
                            "inputType": "MuiInput-inputType-18",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                            "multiline": "MuiInput-multiline-13",
                            "root": "MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": "downshift-13-menu",
                            "aria-labelledby": "downshift-13-label",
                            "autoComplete": "off",
                            "id": "downshift-13-input",
                            "onBlur": [Function],
                            "onKeyDown": [Function],
                            "style": Object {
                              "flex": "1 1 auto",
                              "minWidth": "200px",
                              "width": "auto",
                            },
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        startAdornment={false}
                        type="text"
                        value="some text"
                      >
                        <WithFormControlContext(InputBase)
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-25",
                              "adornedStart": "MuiInputBase-adornedStart-24",
                              "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                              "error": "MuiInputBase-error-26 MuiInput-error-12",
                              "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                              "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                              "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                              "input": "MuiInputBase-input-30 MuiInput-input-15",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                              "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                              "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                              "marginDense": "MuiInputBase-marginDense-27",
                              "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                              "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            }
                          }
                          fullWidth={false}
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": "downshift-13-menu",
                              "aria-labelledby": "downshift-13-label",
                              "autoComplete": "off",
                              "id": "downshift-13-input",
                              "onBlur": [Function],
                              "onKeyDown": [Function],
                              "style": Object {
                                "flex": "1 1 auto",
                                "minWidth": "200px",
                                "width": "auto",
                              },
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          startAdornment={false}
                          type="text"
                          value="some text"
                        >
                          <InputBase
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-25",
                                "adornedStart": "MuiInputBase-adornedStart-24",
                                "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                                "error": "MuiInputBase-error-26 MuiInput-error-12",
                                "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                                "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                                "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                                "input": "MuiInputBase-input-30 MuiInput-input-15",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                                "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                                "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                                "marginDense": "MuiInputBase-marginDense-27",
                                "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                                "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": "downshift-13-menu",
                                "aria-labelledby": "downshift-13-label",
                                "autoComplete": "off",
                                "id": "downshift-13-input",
                                "onBlur": [Function],
                                "onKeyDown": [Function],
                                "style": Object {
                                  "flex": "1 1 auto",
                                  "minWidth": "200px",
                                  "width": "auto",
                                },
                              }
                            }
                            muiFormControl={
                              Object {
                                "adornedStart": false,
                                "disabled": false,
                                "error": false,
                                "filled": true,
                                "focused": false,
                                "margin": "none",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": false,
                                "variant": "standard",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            startAdornment={false}
                            type="text"
                            value="some text"
                          >
                            <div
                              className="MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11 MuiInputBase-formControl-21 MuiInput-formControl-8"
                              onClick={[Function]}
                            >
                              <input
                                aria-activedescendant={null}
                                aria-autocomplete="list"
                                aria-controls="downshift-13-menu"
                                aria-invalid={false}
                                aria-labelledby="downshift-13-label"
                                autoComplete="off"
                                className="MuiInputBase-input-30 MuiInput-input-15"
                                disabled={false}
                                id="downshift-13-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                required={false}
                                style={
                                  Object {
                                    "flex": "1 1 auto",
                                    "minWidth": "200px",
                                    "width": "auto",
                                  }
                                }
                                type="text"
                                value="some text"
                              />
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </div>
              </FormControl>
            </WithStyles(FormControl)>
          </TextField>
        </PickerInput>
      </WithStyles(PickerInput)>
      <PickerDropdown
        clearItems={[Function]}
        clearSelection={[Function]}
        closeMenu={[Function]}
        getItemProps={[Function]}
        getLabelProps={[Function]}
        getMenuProps={[Function]}
        getRootProps={[Function]}
        getToggleButtonProps={[Function]}
        highlightedIndex={null}
        id="downshift-13"
        inputValue="some text"
        isOpen={true}
        itemToString={[Function]}
        openMenu={[Function]}
        reset={[Function]}
        selectHighlightedItem={[Function]}
        selectItem={[Function]}
        selectItemAtIndex={[Function]}
        selectedItem={null}
        selectedItems={Array []}
        setHighlightedIndex={[Function]}
        setItemCount={[Function]}
        setState={[Function]}
        suggestions={[Error: fail]}
        toggleMenu={[Function]}
        unsetItemCount={[Function]}
      >
        <WithStyles(Paper)
          square={true}
          style={
            Object {
              "position": "absolute",
              "width": "100%",
              "zIndex": 100,
            }
          }
        >
          <Paper
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0-85",
                "elevation1": "MuiPaper-elevation1-86",
                "elevation10": "MuiPaper-elevation10-95",
                "elevation11": "MuiPaper-elevation11-96",
                "elevation12": "MuiPaper-elevation12-97",
                "elevation13": "MuiPaper-elevation13-98",
                "elevation14": "MuiPaper-elevation14-99",
                "elevation15": "MuiPaper-elevation15-100",
                "elevation16": "MuiPaper-elevation16-101",
                "elevation17": "MuiPaper-elevation17-102",
                "elevation18": "MuiPaper-elevation18-103",
                "elevation19": "MuiPaper-elevation19-104",
                "elevation2": "MuiPaper-elevation2-87",
                "elevation20": "MuiPaper-elevation20-105",
                "elevation21": "MuiPaper-elevation21-106",
                "elevation22": "MuiPaper-elevation22-107",
                "elevation23": "MuiPaper-elevation23-108",
                "elevation24": "MuiPaper-elevation24-109",
                "elevation3": "MuiPaper-elevation3-88",
                "elevation4": "MuiPaper-elevation4-89",
                "elevation5": "MuiPaper-elevation5-90",
                "elevation6": "MuiPaper-elevation6-91",
                "elevation7": "MuiPaper-elevation7-92",
                "elevation8": "MuiPaper-elevation8-93",
                "elevation9": "MuiPaper-elevation9-94",
                "root": "MuiPaper-root-83",
                "rounded": "MuiPaper-rounded-84",
              }
            }
            component="div"
            elevation={2}
            square={true}
            style={
              Object {
                "position": "absolute",
                "width": "100%",
                "zIndex": 100,
              }
            }
          >
            <div
              className="MuiPaper-root-83 MuiPaper-elevation2-87"
              style={
                Object {
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": 100,
                }
              }
            >
              <PickerSuggestions
                clearItems={[Function]}
                clearSelection={[Function]}
                closeMenu={[Function]}
                getItemProps={[Function]}
                getLabelProps={[Function]}
                getMenuProps={[Function]}
                getRootProps={[Function]}
                getToggleButtonProps={[Function]}
                highlightedIndex={null}
                id="downshift-13"
                inputValue="some text"
                itemToString={[Function]}
                openMenu={[Function]}
                reset={[Function]}
                selectHighlightedItem={[Function]}
                selectItem={[Function]}
                selectItemAtIndex={[Function]}
                selectedItem={null}
                selectedItems={Array []}
                setHighlightedIndex={[Function]}
                setItemCount={[Function]}
                setState={[Function]}
                suggestions={[Error: fail]}
                toggleMenu={[Function]}
                unsetItemCount={[Function]}
              >
                <WithStyles(Typography)
                  align="center"
                  className="suggestion-error-message"
                  gutterBottom={true}
                  variant="h6"
                >
                  <Typography
                    align="center"
                    className="suggestion-error-message"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter-374",
                        "alignJustify": "MuiTypography-alignJustify-376",
                        "alignLeft": "MuiTypography-alignLeft-373",
                        "alignRight": "MuiTypography-alignRight-375",
                        "body1": "MuiTypography-body1-360",
                        "body2": "MuiTypography-body2-359",
                        "button": "MuiTypography-button-362",
                        "caption": "MuiTypography-caption-361",
                        "colorError": "MuiTypography-colorError-385",
                        "colorInherit": "MuiTypography-colorInherit-380",
                        "colorPrimary": "MuiTypography-colorPrimary-381",
                        "colorSecondary": "MuiTypography-colorSecondary-382",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary-383",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary-384",
                        "display1": "MuiTypography-display1-355",
                        "display2": "MuiTypography-display2-354",
                        "display3": "MuiTypography-display3-353",
                        "display4": "MuiTypography-display4-352",
                        "gutterBottom": "MuiTypography-gutterBottom-378",
                        "h1": "MuiTypography-h1-363",
                        "h2": "MuiTypography-h2-364",
                        "h3": "MuiTypography-h3-365",
                        "h4": "MuiTypography-h4-366",
                        "h5": "MuiTypography-h5-367",
                        "h6": "MuiTypography-h6-368",
                        "headline": "MuiTypography-headline-356",
                        "inline": "MuiTypography-inline-386",
                        "noWrap": "MuiTypography-noWrap-377",
                        "overline": "MuiTypography-overline-371",
                        "paragraph": "MuiTypography-paragraph-379",
                        "root": "MuiTypography-root-351",
                        "srOnly": "MuiTypography-srOnly-372",
                        "subheading": "MuiTypography-subheading-358",
                        "subtitle1": "MuiTypography-subtitle1-369",
                        "subtitle2": "MuiTypography-subtitle2-370",
                        "title": "MuiTypography-title-357",
                      }
                    }
                    color="default"
                    gutterBottom={true}
                    headlineMapping={
                      Object {
                        "body1": "p",
                        "body2": "p",
                        "display1": "h1",
                        "display2": "h1",
                        "display3": "h1",
                        "display4": "h1",
                        "h1": "h1",
                        "h2": "h2",
                        "h3": "h3",
                        "h4": "h4",
                        "h5": "h5",
                        "h6": "h6",
                        "headline": "h1",
                        "subheading": "h3",
                        "subtitle1": "h6",
                        "subtitle2": "h6",
                        "title": "h2",
                      }
                    }
                    inline={false}
                    noWrap={false}
                    paragraph={false}
                    theme={
                      Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                          "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                          "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "lineHeight": "1.46429em",
                          },
                          "body1Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "lineHeight": "1.71429em",
                          },
                          "body2Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.5,
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "textTransform": "uppercase",
                          },
                          "buttonNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "lineHeight": "1.375em",
                          },
                          "captionNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "display1": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.20588em",
                          },
                          "display2": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.8125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.13333em",
                            "marginLeft": "-.02em",
                          },
                          "display3": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "-.02em",
                            "lineHeight": "1.30357em",
                            "marginLeft": "-.02em",
                          },
                          "display4": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "7rem",
                            "fontWeight": 300,
                            "letterSpacing": "-.04em",
                            "lineHeight": "1.14286em",
                            "marginLeft": "-.04em",
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1,
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1,
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.04,
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.17,
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.33,
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "headline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "lineHeight": "1.35417em",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subheading": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "lineHeight": "1.5em",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                          "title": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.3125rem",
                            "fontWeight": 500,
                            "lineHeight": "1.16667em",
                          },
                          "useNextVariants": false,
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "tooltip": 1500,
                        },
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root-351 MuiTypography-h6-368 MuiTypography-gutterBottom-378 MuiTypography-alignCenter-374 suggestion-error-message"
                    >
                      An error occurred!
                    </h6>
                  </Typography>
                </WithStyles(Typography)>
              </PickerSuggestions>
            </div>
          </Paper>
        </WithStyles(Paper)>
      </PickerDropdown>
    </div>
  </Downshift>
</MultiPicker>
`;

exports[`Preview Picker shows an error message if the getSuggestions function throws an error 1`] = `
<MultiPicker
  getSuggestedItems={[Function]}
  itemToString={[Function]}
  onChange={[Function]}
  value={Array []}
>
  <Downshift
    defaultHighlightedIndex={null}
    defaultIsOpen={false}
    environment={[Window]}
    fullWidth={true}
    getA11yStatusMessage={[Function]}
    inputValue="some text"
    itemToString={[Function]}
    onChange={[Function]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <div
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-12-label"
      aria-owns="downshift-12-menu"
      role="combobox"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <WithStyles(PickerInput)
        aria-activedescendant={null}
        aria-autocomplete="list"
        aria-controls="downshift-12-menu"
        aria-labelledby="downshift-12-label"
        autoComplete="off"
        id="downshift-12-input"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        startAdornment={Array []}
        value="some text"
      >
        <PickerInput
          aria-activedescendant={null}
          aria-autocomplete="list"
          aria-controls="downshift-12-menu"
          aria-labelledby="downshift-12-label"
          autoComplete="off"
          classes={
            Object {
              "InputRoot": "PickerInput-InputRoot-1",
              "inputRoot": "PickerInput-inputRoot-2",
            }
          }
          fullWidth={false}
          id="downshift-12-input"
          label=""
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          startAdornment={Array []}
          value="some text"
        >
          <TextField
            InputLabelProps={
              Object {
                "shrink": true,
              }
            }
            InputProps={
              Object {
                "classes": Object {
                  "root": "PickerInput-InputRoot-1",
                },
                "inputProps": Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": "downshift-12-menu",
                  "aria-labelledby": "downshift-12-label",
                  "autoComplete": "off",
                  "id": "downshift-12-input",
                  "onBlur": [Function],
                  "onKeyDown": [Function],
                  "style": Object {
                    "flex": "1 1 auto",
                    "minWidth": "200px",
                    "width": "auto",
                  },
                },
                "startAdornment": false,
              }
            }
            fullWidth={false}
            label=""
            onChange={[Function]}
            required={false}
            select={false}
            value="some text"
            variant="standard"
          >
            <WithStyles(FormControl)
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <FormControl
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth-6",
                    "marginDense": "MuiFormControl-marginDense-5",
                    "marginNormal": "MuiFormControl-marginNormal-4",
                    "root": "MuiFormControl-root-3",
                  }
                }
                component="div"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="none"
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root-3"
                >
                  <WithStyles(Input)
                    classes={
                      Object {
                        "root": "PickerInput-InputRoot-1",
                      }
                    }
                    fullWidth={false}
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": "downshift-12-menu",
                        "aria-labelledby": "downshift-12-label",
                        "autoComplete": "off",
                        "id": "downshift-12-input",
                        "onBlur": [Function],
                        "onKeyDown": [Function],
                        "style": Object {
                          "flex": "1 1 auto",
                          "minWidth": "200px",
                          "width": "auto",
                        },
                      }
                    }
                    onChange={[Function]}
                    startAdornment={false}
                    value="some text"
                  >
                    <Input
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-10",
                          "error": "MuiInput-error-12",
                          "focused": "MuiInput-focused-9",
                          "formControl": "MuiInput-formControl-8",
                          "fullWidth": "MuiInput-fullWidth-14",
                          "input": "MuiInput-input-15",
                          "inputMarginDense": "MuiInput-inputMarginDense-16",
                          "inputMultiline": "MuiInput-inputMultiline-17",
                          "inputType": "MuiInput-inputType-18",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                          "multiline": "MuiInput-multiline-13",
                          "root": "MuiInput-root-7 PickerInput-InputRoot-1",
                          "underline": "MuiInput-underline-11",
                        }
                      }
                      fullWidth={false}
                      inputProps={
                        Object {
                          "aria-activedescendant": null,
                          "aria-autocomplete": "list",
                          "aria-controls": "downshift-12-menu",
                          "aria-labelledby": "downshift-12-label",
                          "autoComplete": "off",
                          "id": "downshift-12-input",
                          "onBlur": [Function],
                          "onKeyDown": [Function],
                          "style": Object {
                            "flex": "1 1 auto",
                            "minWidth": "200px",
                            "width": "auto",
                          },
                        }
                      }
                      onChange={[Function]}
                      startAdornment={false}
                      value="some text"
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-10",
                            "error": "MuiInput-error-12",
                            "focused": "MuiInput-focused-9",
                            "formControl": "MuiInput-formControl-8",
                            "fullWidth": "MuiInput-fullWidth-14",
                            "input": "MuiInput-input-15",
                            "inputMarginDense": "MuiInput-inputMarginDense-16",
                            "inputMultiline": "MuiInput-inputMultiline-17",
                            "inputType": "MuiInput-inputType-18",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-19",
                            "multiline": "MuiInput-multiline-13",
                            "root": "MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": "downshift-12-menu",
                            "aria-labelledby": "downshift-12-label",
                            "autoComplete": "off",
                            "id": "downshift-12-input",
                            "onBlur": [Function],
                            "onKeyDown": [Function],
                            "style": Object {
                              "flex": "1 1 auto",
                              "minWidth": "200px",
                              "width": "auto",
                            },
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        startAdornment={false}
                        type="text"
                        value="some text"
                      >
                        <WithFormControlContext(InputBase)
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-25",
                              "adornedStart": "MuiInputBase-adornedStart-24",
                              "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                              "error": "MuiInputBase-error-26 MuiInput-error-12",
                              "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                              "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                              "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                              "input": "MuiInputBase-input-30 MuiInput-input-15",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                              "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                              "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                              "marginDense": "MuiInputBase-marginDense-27",
                              "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                              "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                            }
                          }
                          fullWidth={false}
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": "downshift-12-menu",
                              "aria-labelledby": "downshift-12-label",
                              "autoComplete": "off",
                              "id": "downshift-12-input",
                              "onBlur": [Function],
                              "onKeyDown": [Function],
                              "style": Object {
                                "flex": "1 1 auto",
                                "minWidth": "200px",
                                "width": "auto",
                              },
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          startAdornment={false}
                          type="text"
                          value="some text"
                        >
                          <InputBase
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-25",
                                "adornedStart": "MuiInputBase-adornedStart-24",
                                "disabled": "MuiInputBase-disabled-23 MuiInput-disabled-10",
                                "error": "MuiInputBase-error-26 MuiInput-error-12",
                                "focused": "MuiInputBase-focused-22 MuiInput-focused-9",
                                "formControl": "MuiInputBase-formControl-21 MuiInput-formControl-8",
                                "fullWidth": "MuiInputBase-fullWidth-29 MuiInput-fullWidth-14",
                                "input": "MuiInputBase-input-30 MuiInput-input-15",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-36",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-35",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-31 MuiInput-inputMarginDense-16",
                                "inputMultiline": "MuiInputBase-inputMultiline-32 MuiInput-inputMultiline-17",
                                "inputType": "MuiInputBase-inputType-33 MuiInput-inputType-18",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-34 MuiInput-inputTypeSearch-19",
                                "marginDense": "MuiInputBase-marginDense-27",
                                "multiline": "MuiInputBase-multiline-28 MuiInput-multiline-13",
                                "root": "MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11",
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": "downshift-12-menu",
                                "aria-labelledby": "downshift-12-label",
                                "autoComplete": "off",
                                "id": "downshift-12-input",
                                "onBlur": [Function],
                                "onKeyDown": [Function],
                                "style": Object {
                                  "flex": "1 1 auto",
                                  "minWidth": "200px",
                                  "width": "auto",
                                },
                              }
                            }
                            muiFormControl={
                              Object {
                                "adornedStart": false,
                                "disabled": false,
                                "error": false,
                                "filled": true,
                                "focused": false,
                                "margin": "none",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": false,
                                "variant": "standard",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            startAdornment={false}
                            type="text"
                            value="some text"
                          >
                            <div
                              className="MuiInputBase-root-20 MuiInput-root-7 PickerInput-InputRoot-1 MuiInput-underline-11 MuiInputBase-formControl-21 MuiInput-formControl-8"
                              onClick={[Function]}
                            >
                              <input
                                aria-activedescendant={null}
                                aria-autocomplete="list"
                                aria-controls="downshift-12-menu"
                                aria-invalid={false}
                                aria-labelledby="downshift-12-label"
                                autoComplete="off"
                                className="MuiInputBase-input-30 MuiInput-input-15"
                                disabled={false}
                                id="downshift-12-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                required={false}
                                style={
                                  Object {
                                    "flex": "1 1 auto",
                                    "minWidth": "200px",
                                    "width": "auto",
                                  }
                                }
                                type="text"
                                value="some text"
                              />
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </div>
              </FormControl>
            </WithStyles(FormControl)>
          </TextField>
        </PickerInput>
      </WithStyles(PickerInput)>
      <PickerDropdown
        clearItems={[Function]}
        clearSelection={[Function]}
        closeMenu={[Function]}
        getItemProps={[Function]}
        getLabelProps={[Function]}
        getMenuProps={[Function]}
        getRootProps={[Function]}
        getToggleButtonProps={[Function]}
        highlightedIndex={null}
        id="downshift-12"
        inputValue="some text"
        isOpen={true}
        itemToString={[Function]}
        openMenu={[Function]}
        reset={[Function]}
        selectHighlightedItem={[Function]}
        selectItem={[Function]}
        selectItemAtIndex={[Function]}
        selectedItem={null}
        selectedItems={Array []}
        setHighlightedIndex={[Function]}
        setItemCount={[Function]}
        setState={[Function]}
        suggestions={[Error: fail]}
        toggleMenu={[Function]}
        unsetItemCount={[Function]}
      >
        <WithStyles(Paper)
          square={true}
          style={
            Object {
              "position": "absolute",
              "width": "100%",
              "zIndex": 100,
            }
          }
        >
          <Paper
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0-85",
                "elevation1": "MuiPaper-elevation1-86",
                "elevation10": "MuiPaper-elevation10-95",
                "elevation11": "MuiPaper-elevation11-96",
                "elevation12": "MuiPaper-elevation12-97",
                "elevation13": "MuiPaper-elevation13-98",
                "elevation14": "MuiPaper-elevation14-99",
                "elevation15": "MuiPaper-elevation15-100",
                "elevation16": "MuiPaper-elevation16-101",
                "elevation17": "MuiPaper-elevation17-102",
                "elevation18": "MuiPaper-elevation18-103",
                "elevation19": "MuiPaper-elevation19-104",
                "elevation2": "MuiPaper-elevation2-87",
                "elevation20": "MuiPaper-elevation20-105",
                "elevation21": "MuiPaper-elevation21-106",
                "elevation22": "MuiPaper-elevation22-107",
                "elevation23": "MuiPaper-elevation23-108",
                "elevation24": "MuiPaper-elevation24-109",
                "elevation3": "MuiPaper-elevation3-88",
                "elevation4": "MuiPaper-elevation4-89",
                "elevation5": "MuiPaper-elevation5-90",
                "elevation6": "MuiPaper-elevation6-91",
                "elevation7": "MuiPaper-elevation7-92",
                "elevation8": "MuiPaper-elevation8-93",
                "elevation9": "MuiPaper-elevation9-94",
                "root": "MuiPaper-root-83",
                "rounded": "MuiPaper-rounded-84",
              }
            }
            component="div"
            elevation={2}
            square={true}
            style={
              Object {
                "position": "absolute",
                "width": "100%",
                "zIndex": 100,
              }
            }
          >
            <div
              className="MuiPaper-root-83 MuiPaper-elevation2-87"
              style={
                Object {
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": 100,
                }
              }
            >
              <PickerSuggestions
                clearItems={[Function]}
                clearSelection={[Function]}
                closeMenu={[Function]}
                getItemProps={[Function]}
                getLabelProps={[Function]}
                getMenuProps={[Function]}
                getRootProps={[Function]}
                getToggleButtonProps={[Function]}
                highlightedIndex={null}
                id="downshift-12"
                inputValue="some text"
                itemToString={[Function]}
                openMenu={[Function]}
                reset={[Function]}
                selectHighlightedItem={[Function]}
                selectItem={[Function]}
                selectItemAtIndex={[Function]}
                selectedItem={null}
                selectedItems={Array []}
                setHighlightedIndex={[Function]}
                setItemCount={[Function]}
                setState={[Function]}
                suggestions={[Error: fail]}
                toggleMenu={[Function]}
                unsetItemCount={[Function]}
              >
                <WithStyles(Typography)
                  align="center"
                  className="suggestion-error-message"
                  gutterBottom={true}
                  variant="h6"
                >
                  <Typography
                    align="center"
                    className="suggestion-error-message"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter-374",
                        "alignJustify": "MuiTypography-alignJustify-376",
                        "alignLeft": "MuiTypography-alignLeft-373",
                        "alignRight": "MuiTypography-alignRight-375",
                        "body1": "MuiTypography-body1-360",
                        "body2": "MuiTypography-body2-359",
                        "button": "MuiTypography-button-362",
                        "caption": "MuiTypography-caption-361",
                        "colorError": "MuiTypography-colorError-385",
                        "colorInherit": "MuiTypography-colorInherit-380",
                        "colorPrimary": "MuiTypography-colorPrimary-381",
                        "colorSecondary": "MuiTypography-colorSecondary-382",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary-383",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary-384",
                        "display1": "MuiTypography-display1-355",
                        "display2": "MuiTypography-display2-354",
                        "display3": "MuiTypography-display3-353",
                        "display4": "MuiTypography-display4-352",
                        "gutterBottom": "MuiTypography-gutterBottom-378",
                        "h1": "MuiTypography-h1-363",
                        "h2": "MuiTypography-h2-364",
                        "h3": "MuiTypography-h3-365",
                        "h4": "MuiTypography-h4-366",
                        "h5": "MuiTypography-h5-367",
                        "h6": "MuiTypography-h6-368",
                        "headline": "MuiTypography-headline-356",
                        "inline": "MuiTypography-inline-386",
                        "noWrap": "MuiTypography-noWrap-377",
                        "overline": "MuiTypography-overline-371",
                        "paragraph": "MuiTypography-paragraph-379",
                        "root": "MuiTypography-root-351",
                        "srOnly": "MuiTypography-srOnly-372",
                        "subheading": "MuiTypography-subheading-358",
                        "subtitle1": "MuiTypography-subtitle1-369",
                        "subtitle2": "MuiTypography-subtitle2-370",
                        "title": "MuiTypography-title-357",
                      }
                    }
                    color="default"
                    gutterBottom={true}
                    headlineMapping={
                      Object {
                        "body1": "p",
                        "body2": "p",
                        "display1": "h1",
                        "display2": "h1",
                        "display3": "h1",
                        "display4": "h1",
                        "h1": "h1",
                        "h2": "h2",
                        "h3": "h3",
                        "h4": "h4",
                        "h5": "h5",
                        "h6": "h6",
                        "headline": "h1",
                        "subheading": "h3",
                        "subtitle1": "h6",
                        "subtitle2": "h6",
                        "title": "h2",
                      }
                    }
                    inline={false}
                    noWrap={false}
                    paragraph={false}
                    theme={
                      Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                          "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                          "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "lineHeight": "1.46429em",
                          },
                          "body1Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "lineHeight": "1.71429em",
                          },
                          "body2Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.5,
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "textTransform": "uppercase",
                          },
                          "buttonNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "lineHeight": "1.375em",
                          },
                          "captionNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "display1": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.20588em",
                          },
                          "display2": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.8125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.13333em",
                            "marginLeft": "-.02em",
                          },
                          "display3": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "-.02em",
                            "lineHeight": "1.30357em",
                            "marginLeft": "-.02em",
                          },
                          "display4": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "7rem",
                            "fontWeight": 300,
                            "letterSpacing": "-.04em",
                            "lineHeight": "1.14286em",
                            "marginLeft": "-.04em",
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1,
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1,
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.04,
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.17,
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.33,
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "headline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "lineHeight": "1.35417em",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subheading": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "lineHeight": "1.5em",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                          "title": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.3125rem",
                            "fontWeight": 500,
                            "lineHeight": "1.16667em",
                          },
                          "useNextVariants": false,
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "tooltip": 1500,
                        },
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root-351 MuiTypography-h6-368 MuiTypography-gutterBottom-378 MuiTypography-alignCenter-374 suggestion-error-message"
                    >
                      An error occurred!
                    </h6>
                  </Typography>
                </WithStyles(Typography)>
              </PickerSuggestions>
            </div>
          </Paper>
        </WithStyles(Paper)>
      </PickerDropdown>
    </div>
  </Downshift>
</MultiPicker>
`;
